{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\xx\\\\Desktop\\\\Phytoflex\\\\screens\\\\plantcare\\\\plantCareHomePage.js\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { Component, useState } from 'react';\nimport { Portal } from 'react-native-paper';\nimport { globalStyles } from \"../global/globalStyles\";\nimport firebase from 'firebase';\nimport { PFText, PFTextInput, PFPopupMenu, PFActivityIndicator, PFModalLogin, PFModalAlert, PFModalPrompt, PFPrimaryButton, PFSecondaryButton, PFRadioButton, PFFlatList, AccountListItem, PlantListItem, MyGardenItem, PFCard } from \"../../components\";\nimport Colors from \"../../utils/globalColors\";\nimport SampleData from \"../../utils/SampleData\";\nimport { DrawerContent } from \"../global/Drawer\";\nimport { ScrollView } from 'react-native-gesture-handler';\nexport default function PlantCareHomePage(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginVisible = _useState2[0],\n      setloginVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmVisible = _useState4[0],\n      setconfirmVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      alertVisible = _useState6[0],\n      setalerVisible = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      popupvisible = _useState8[0],\n      setpopupvisible = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inpText = _useState10[0],\n      setinpText = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      checked = _useState12[0],\n      setchecked = _useState12[1];\n\n  var imgref = function imgref(url) {\n    firebase.storage().refFromURL(url).then(function (res) {\n      return res;\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    showsHorizontalScrollIndicator: false,\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.searchBoxContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.searchBoxIcon,\n    source: require(\"../../assets/drawerIcons/plantCareIcons/search.png\"),\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      fontSize: 15,\n      fontFamily: 'poppins-regular',\n      flex: 1\n    },\n    placeholder: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), React.createElement(PFFlatList, {\n    numColumns: 2,\n    noDataMessage: \"No Plant item to post\",\n    data: SampleData.myGarden,\n    renderItem: function renderItem(item) {\n      return React.createElement(MyGardenItem, {\n        imageURL: item.imageURL,\n        description: item.plantCommonName,\n        onPress: function onPress() {\n          return Alert.alert(item.plantFamilyName);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7,\n    style: styles.fabContainer,\n    onPress: function onPress() {\n      return navigation.navigate('Instruction');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/drawerIcons/plantCareIcons/camera.png\"),\n    style: styles.fabImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  searchBoxContainer: {\n    backgroundColor: '#F5F7FA',\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    marginVertical: 10,\n    alignItems: 'center',\n    flexDirection: 'row',\n    borderRadius: 12\n  },\n  searchBoxIcon: {\n    height: 20,\n    width: 20\n  },\n  fabContainer: {\n    backgroundColor: Colors.white,\n    position: 'absolute',\n    width: 60,\n    height: 60,\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 15,\n    bottom: 20,\n    borderRadius: 35,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 0,\n    elevation: 10\n  },\n  fab: {\n    position: 'absolute',\n    margin: 15,\n    right: 0,\n    bottom: 0,\n    backgroundColor: '#F5F7FA'\n  },\n  fabImage: {\n    resizeMode: 'contain',\n    width: 25,\n    height: 25\n  }\n});","map":{"version":3,"sources":["C:/Users/xx/Desktop/Phytoflex/screens/plantcare/plantCareHomePage.js"],"names":["React","Component","useState","Portal","globalStyles","firebase","PFText","PFTextInput","PFPopupMenu","PFActivityIndicator","PFModalLogin","PFModalAlert","PFModalPrompt","PFPrimaryButton","PFSecondaryButton","PFRadioButton","PFFlatList","AccountListItem","PlantListItem","MyGardenItem","PFCard","Colors","SampleData","DrawerContent","ScrollView","PlantCareHomePage","navigation","loginVisible","setloginVisible","confirmVisible","setconfirmVisible","alertVisible","setalerVisible","popupvisible","setpopupvisible","inpText","setinpText","checked","setchecked","imgref","url","storage","refFromURL","then","res","styles","mainContainer","searchBoxContainer","searchBoxIcon","require","fontSize","fontFamily","flex","myGarden","item","imageURL","plantCommonName","Alert","alert","plantFamilyName","index","fabContainer","navigate","fabImage","StyleSheet","create","backgroundColor","paddingHorizontal","paddingVertical","marginVertical","alignItems","flexDirection","borderRadius","height","width","white","position","justifyContent","right","bottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","fab","margin","resizeMode"],"mappings":"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","sourcesContent":["import { Button, Text, View, StyleSheet, TextInput, Image, TouchableOpacity, Alert, FlatList, Pressable} from 'react-native';\r\nimport React, { Component, useState } from 'react';\r\nimport { Portal } from 'react-native-paper';\r\nimport { globalStyles } from '../global/globalStyles';\r\n\r\nimport firebase from 'firebase';\r\n\r\n// global import\r\nimport { \r\n  PFText , PFTextInput, PFPopupMenu, PFActivityIndicator,\r\n  PFModalLogin , PFModalAlert, PFModalPrompt, \r\n  PFPrimaryButton, PFSecondaryButton, PFRadioButton,\r\n  PFFlatList, \r\n  AccountListItem, PlantListItem, MyGardenItem,\r\n  PFCard\r\n} from '../../components';\r\n\r\nimport Colors from '../../utils/globalColors';\r\n\r\nimport SampleData from '../../utils/SampleData';\r\n\r\nimport { DrawerContent } from '../global/Drawer';\r\n\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n\r\nexport default function PlantCareHomePage({navigation}) {\r\n  // Calling Plantcare search screen\r\n\r\n  const [loginVisible, setloginVisible] = useState(false)\r\n  const [confirmVisible, setconfirmVisible] = useState(false)\r\n  const [alertVisible, setalerVisible] = useState(false)\r\n\r\n  const [popupvisible, setpopupvisible] = useState(false)\r\n\r\n  const [inpText, setinpText] = useState(\"\")\r\n\r\n  const [checked, setchecked] = useState(false)\r\n\r\n  const imgref = (url) => {\r\n    firebase.storage().refFromURL(url).then((res) => {\r\n      return res;\r\n    })\r\n  }\r\n\r\n  return (\r\n    <View style={ styles.mainContainer }>\r\n      <ScrollView\r\n        showsHorizontalScrollIndicator={false}\r\n        showsVerticalScrollIndicator={false}\r\n      >\r\n        <View style={styles.searchBoxContainer}>\r\n          <Image\r\n            style={styles.searchBoxIcon}\r\n            source={require('../../assets/drawerIcons/plantCareIcons/search.png')}\r\n            resizeMode='contain'\r\n          />\r\n          <TextInput\r\n            style={{fontSize: 15, fontFamily: 'poppins-regular', flex: 1}}\r\n            placeholder='Search'\r\n          />\r\n        </View>\r\n\r\n        <PFFlatList\r\n            numColumns={2}\r\n            noDataMessage='No Plant item to post'\r\n            data={SampleData.myGarden}\r\n            renderItem={(item) => (\r\n              <MyGardenItem \r\n                // imageURL={firebase.storage().refFromURL(item.imageURL)}\r\n                imageURL={item.imageURL}\r\n                description={item.plantCommonName}\r\n                onPress={() => Alert.alert(item.plantFamilyName)}/>\r\n              )}\r\n            keyExtractor={(item,index) => index}\r\n          />\r\n\r\n      </ScrollView>\r\n\r\n      <TouchableOpacity\r\n        activeOpacity={0.7}\r\n        style={styles.fabContainer}\r\n        onPress={() => navigation.navigate('Instruction')}\r\n        >\r\n        <Image\r\n          // FAB using TouchableOpacity with an image\r\n          // For online image\r\n          source={ require('../../assets/drawerIcons/plantCareIcons/camera.png')}\r\n          // For local image\r\n          //source={require('./images/float-add-icon.png')}\r\n          style={styles.fabImage}\r\n        />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  mainContainer: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    // paddingHorizontal: 12\r\n  },\r\n  searchBoxContainer: {\r\n    backgroundColor: '#F5F7FA',\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 5,\r\n    marginVertical: 10,\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    borderRadius: 12,\r\n    // flex:1,\r\n  },\r\n  searchBoxIcon: {\r\n    height: 20,\r\n    width: 20\r\n  },\r\n  fabContainer: {\r\n    backgroundColor: Colors.white,\r\n    position: 'absolute',\r\n    width: 60,\r\n    height: 60,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    right: 15,\r\n    bottom: 20,\r\n\r\n    borderRadius: 35,\r\n    // borderColor: 'black',\r\n    // borderWidth: 5,\r\n    shadowColor: \"black\",\r\n    shadowOffset: {\r\n        width: 0,\r\n        height: 5,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 0,\r\n    elevation: 10,\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 15,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: '#F5F7FA',\r\n  },\r\n  fabImage: {\r\n    // marginTop: 7,\r\n    resizeMode: 'contain',\r\n    width: 25,\r\n    height: 25,\r\n    //backgroundColor:'black'\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\xx\\\\Desktop\\\\Phytoflex\\\\screens\\\\eCommerce\\\\ShopMainPage.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { globalStyles } from \"../global/globalStyles\";\nimport { PFPrimaryButton, PFFlatList, PlantListItem, PFText, PFTextInput, PFCard, PFCardShop, PlantCategory, SearchPlant } from \"./../../components\";\nimport SampleData from \"../../utils/SampleData\";\nimport ImageSlider from 'react-native-image-slider';\nimport firebase from 'firebase';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nimport { render } from 'react-dom';\nvar images = ['https://firebasestorage.googleapis.com/v0/b/phytoflex-3f53f.appspot.com/o/Shop%2FBanner_1.jpg?alt=media&token=85e917d3-fb19-4772-a972-2b2adbecf717', 'https://firebasestorage.googleapis.com/v0/b/phytoflex-3f53f.appspot.com/o/Shop%2FBanner_2.jpg?alt=media&token=2b7262d3-005e-40ef-a044-eee8f6529558', 'https://firebasestorage.googleapis.com/v0/b/phytoflex-3f53f.appspot.com/o/Shop%2FBanner_3.jpg?alt=media&token=947ce232-6cac-4488-9b5c-83ad1f3b5aa4', 'https://firebasestorage.googleapis.com/v0/b/phytoflex-3f53f.appspot.com/o/Shop%2FBanner_4.jpg?alt=media&token=a2b2f513-2c8e-4d2f-93d7-654f83755a3c'];\nexport default function ShopHomePage(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      refdata = _useState2[0],\n      setrefdata = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refnull = _useState4[0],\n      setrefnull = _useState4[1];\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            firebase.firestore().collection('PlantListItem').get().then(function (res) {\n              var comment = res.docs.map(function (doc) {\n                var data = doc.data();\n                var id = doc.id;\n                return _objectSpread({\n                  id: id\n                }, data);\n              });\n              setrefdata(comment);\n              console.log(refdata);\n              setrefnull(false);\n            }).catch(function (err) {\n              Alert.alert(err);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  function toShopSearch() {\n    navigation.navigate('ShopSearch');\n  }\n\n  return React.createElement(View, {\n    style: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.searchBoxContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      fontSize: 15,\n      fontFamily: 'poppins-regular',\n      flex: 1\n    },\n    placeholder: \"Search for Plants\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.searchBoxIcon,\n    source: require(\"../../assets/drawerIcons/plantCareIcons/search.png\"),\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }))), React.createElement(View, {\n    style: styles.bannerPadding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageSlider, {\n    loop: true,\n    autoPlayWithInterval: 2000,\n    images: images,\n    onPress: function onPress(_ref2) {\n      var index = _ref2.index;\n      return alert(index);\n    },\n    customSlide: function customSlide(_ref3) {\n      var index = _ref3.index,\n          item = _ref3.item,\n          style = _ref3.style,\n          width = _ref3.width;\n      return React.createElement(View, {\n        key: index,\n        style: [style, styles.customSlide, {\n          backgroundColor: index % 2 === 0 ? '#F5FCFF' : '#F5FCFF'\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item\n        },\n        style: styles.customImage,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }));\n    },\n    customButtons: function customButtons(position, move) {\n      return React.createElement(View, {\n        style: styles.buttons,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, images.map(function (image, index) {\n        return React.createElement(TouchableHighlight, {\n          key: index,\n          underlayColor: \"#ccc\",\n          onPress: function onPress() {\n            return move(index);\n          },\n          style: styles.button,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: position === index && styles.buttonSelected,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }\n        }, index + 1));\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, React.createElement(PFText, {\n    weight: \"semi-bold\",\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \" Categories\"), React.createElement(PFFlatList, {\n    numColumns: 4,\n    noDataMessage: \"No Plant item to post\",\n    data: SampleData.plantCategory,\n    renderItem: function renderItem(item) {\n      return React.createElement(PlantCategory, {\n        imageURL: item.imageURL,\n        categoryName: item.category,\n        onPress: function onPress() {\n          return Alert.alert(item.category);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, React.createElement(PFText, {\n    weight: \"semi-bold\",\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"Discover Plants\"), React.createElement(PFFlatList, {\n    numColumns: 2,\n    noDataMessage: \"Loading...\",\n    data: refdata,\n    renderItem: function renderItem(item) {\n      return React.createElement(PFCardShop, {\n        imageURL: item.imageURL,\n        itemName: item.itemName,\n        category: item.categoryName,\n        price: item.price,\n        quantity: item.quantity,\n        sold: item.sold,\n        onPress: function onPress() {\n          navigation.navigate('ProductPage', {\n            itemName: item.itemName,\n            imageURL: item.imageURL,\n            category: item.categoryName,\n            price: item.price,\n            sold: item.sold,\n            size: item.size,\n            stock: item.quantity,\n            plantDesc: item.plantDesc\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  mainContainer: {\n    paddingHorizontal: 5,\n    alignItems: 'center'\n  },\n  textContaine: {\n    fontSize: 50\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#F5FCFF'\n  },\n  slider: {\n    backgroundColor: '#000',\n    height: 350\n  },\n  content1: {\n    width: '100%',\n    height: 50,\n    marginBottom: 10,\n    backgroundColor: '#000',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  content2: {\n    width: '100%',\n    height: 100,\n    marginTop: 10,\n    backgroundColor: '#000',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  contentText: {\n    color: '#fff'\n  },\n  buttons: {\n    zIndex: 1,\n    height: 15,\n    marginTop: -25,\n    marginBottom: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  button: {\n    margin: 3,\n    width: 15,\n    height: 15,\n    opacity: 0.9,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonSelected: {\n    opacity: 1,\n    color: 'white'\n  },\n  customSlide: {\n    backgroundColor: 'green',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  customImage: {\n    width: Dimensions.get('window').width / 1 * 1,\n    height: 160\n  },\n  bannerPadding: {\n    paddingBottom: 8\n  },\n  searchBoxContainer: {\n    borderColor: '#1D4123',\n    width: '100%',\n    borderWidth: 1,\n    backgroundColor: '#F5F7FA',\n    paddingHorizontal: 12,\n    paddingVertical: 5,\n    marginVertical: 10,\n    alignItems: 'center',\n    flexDirection: 'row',\n    borderRadius: 12,\n    color: '#1D4123'\n  },\n  searchBoxIcon: {\n    height: 20,\n    width: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/xx/Desktop/Phytoflex/screens/eCommerce/ShopMainPage.js"],"names":["React","Component","useState","useEffect","globalStyles","PFPrimaryButton","PFFlatList","PlantListItem","PFText","PFTextInput","PFCard","PFCardShop","PlantCategory","SearchPlant","SampleData","ImageSlider","firebase","FlatList","ScrollView","render","images","ShopHomePage","navigation","refdata","setrefdata","refnull","setrefnull","getData","firestore","collection","get","then","res","comment","docs","map","doc","data","id","console","log","catch","err","Alert","alert","toShopSearch","navigate","styles","mainContainer","searchBoxContainer","fontSize","fontFamily","flex","alignItems","searchBoxIcon","require","bannerPadding","index","item","style","width","customSlide","backgroundColor","uri","customImage","position","move","buttons","image","button","buttonSelected","plantCategory","imageURL","category","itemName","categoryName","price","quantity","sold","size","stock","plantDesc","StyleSheet","create","paddingHorizontal","textContaine","container","slider","height","content1","marginBottom","justifyContent","content2","marginTop","contentText","color","zIndex","flexDirection","margin","opacity","Dimensions","paddingBottom","borderColor","borderWidth","paddingVertical","marginVertical","borderRadius"],"mappings":";;;;;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,YAAT;AACA,SAASC,eAAT,EAA0BC,UAA1B,EAAsCC,aAAtC,EAAqDC,MAArD,EAA6DC,WAA7D,EAA0EC,MAA1E,EAAkFC,UAAlF,EAA8FC,aAA9F,EAA6GC,WAA7G;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAGA,OAAOC,QAAP,MAAqB,UAArB;AAEA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,8BAArC;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,IAAMC,MAAM,GAAG,CACT,oJADS,EAET,oJAFS,EAGT,oJAHS,EAIT,oJAJS,CAAf;AAOA,eAAe,SAASC,YAAT,OAAqC;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAElD,kBAA8BpB,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOqB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA8BtB,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOuB,OAAP;AAAA,MAAgBC,UAAhB;;AAME,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAGdX,YAAAA,QAAQ,CAACY,SAAT,GACCC,UADD,CACY,eADZ,EAC6BC,GAD7B,GACmCC,IADnC,CACwC,UAACC,GAAD,EAAS;AAC/C,kBAAIC,OAAO,GAAGD,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAa,UAAAC,GAAG,EAAI;AAChC,oBAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACA,oBAAMC,EAAE,GAAGF,GAAG,CAACE,EAAf;AACA;AAAQA,kBAAAA,EAAE,EAAFA;AAAR,mBAAeD,IAAf;AACD,eAJa,CAAd;AAKAb,cAAAA,UAAU,CAACS,OAAD,CAAV;AACAM,cAAAA,OAAO,CAACC,GAAR,CAAYjB,OAAZ;AACAG,cAAAA,UAAU,CAAC,KAAD,CAAV;AACD,aAVD,EAUGe,KAVH,CAUS,UAACC,GAAD,EAAS;AAChBC,cAAAA,KAAK,CAACC,KAAN,CAAYF,GAAZ;AACD,aAZD;;AAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAmBJvC,EAAAA,SAAS,CAAC,YAAM;AAEZwB,IAAAA,OAAO;AAEV,GAJQ,EAIN,EAJM,CAAT;;AAOE,WAASkB,YAAT,GAAwB;AACtBvB,IAAAA,UAAU,CAACwB,QAAX,CAAoB,YAApB;AAED;;AAID,SAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AACM,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,EAAX;AAAeC,MAAAA,UAAU,EAAE,iBAA3B;AAA8CC,MAAAA,IAAI,EAAE;AAApD,KADb;AAEM,IAAA,WAAW,EAAC,mBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAMA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACA,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,UAAU,EAAE;AAAtB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AACM,IAAA,KAAK,EAAEN,MAAM,CAACO,aADpB;AAEM,IAAA,MAAM,EAAEC,OAAO,sDAFrB;AAGM,IAAA,UAAU,EAAC,SAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CANA,CADA,EAiBA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,WAAD;AACI,IAAA,IAAI,MADR;AAEI,IAAA,oBAAoB,EAAE,IAF1B;AAGI,IAAA,MAAM,EAAEpC,MAHZ;AAII,IAAA,OAAO,EAAE;AAAA,UAAGqC,KAAH,SAAGA,KAAH;AAAA,aAAeb,KAAK,CAACa,KAAD,CAApB;AAAA,KAJb;AAKI,IAAA,WAAW,EAAE;AAAA,UAAGA,KAAH,SAAGA,KAAH;AAAA,UAAUC,IAAV,SAAUA,IAAV;AAAA,UAAgBC,KAAhB,SAAgBA,KAAhB;AAAA,UAAuBC,KAAvB,SAAuBA,KAAvB;AAAA,aAEX,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEH,KADP;AAEE,QAAA,KAAK,EAAE,CACLE,KADK,EAELZ,MAAM,CAACc,WAFF,EAGL;AAAEC,UAAAA,eAAe,EAAEL,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB,SAAlB,GAA8B;AAAjD,SAHK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE;AAAEM,UAAAA,GAAG,EAAEL;AAAP,SAAf;AAA8B,QAAA,KAAK,EAAEX,MAAM,CAACiB,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CAFW;AAAA,KALjB;AAkBI,IAAA,aAAa,EAAE,uBAACC,QAAD,EAAWC,IAAX;AAAA,aACb,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEnB,MAAM,CAACoB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG/C,MAAM,CAACe,GAAP,CAAW,UAACiC,KAAD,EAAQX,KAAR,EAAkB;AAC5B,eACE,oBAAC,kBAAD;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,aAAa,EAAC,MAFhB;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAMS,IAAI,CAACT,KAAD,CAAV;AAAA,WAHX;AAIE,UAAA,KAAK,EAAEV,MAAM,CAACsB,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAME,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEJ,QAAQ,KAAKR,KAAb,IAAsBV,MAAM,CAACuB,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGb,KAAK,GAAG,CADX,CANF,CADF;AAYD,OAbA,CADH,CADa;AAAA,KAlBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAjBA,EAyDA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAG,WAAjB;AAA6B,IAAA,IAAI,EAAI,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,EAGA,oBAAC,UAAD;AACM,IAAA,UAAU,EAAE,CADlB;AAEM,IAAA,aAAa,EAAC,uBAFpB;AAGM,IAAA,IAAI,EAAE3C,UAAU,CAACyD,aAHvB;AAIM,IAAA,UAAU,EAAE,oBAACb,IAAD;AAAA,aAEV,oBAAC,aAAD;AACE,QAAA,QAAQ,EAAEA,IAAI,CAACc,QADjB;AAEE,QAAA,YAAY,EAAEd,IAAI,CAACe,QAFrB;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM9B,KAAK,CAACC,KAAN,CAAYc,IAAI,CAACe,QAAjB,CAAN;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFU;AAAA,KAJlB;AAYM,IAAA,YAAY,EAAE,sBAACf,IAAD,EAAMD,KAAN;AAAA,aAAgBA,KAAhB;AAAA,KAZpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CAzDA,EA6EE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAG,WAAjB;AAA6B,IAAA,IAAI,EAAI,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFA,EAGA,oBAAC,UAAD;AACI,IAAA,UAAU,EAAE,CADhB;AAEI,IAAA,aAAa,EAAC,YAFlB;AAGI,IAAA,IAAI,EAAElC,OAHV;AAII,IAAA,UAAU,EAAE,oBAACmC,IAAD;AAAA,aACV,oBAAC,UAAD;AACE,QAAA,QAAQ,EAAEA,IAAI,CAACc,QADjB;AAEE,QAAA,QAAQ,EAAEd,IAAI,CAACgB,QAFjB;AAGE,QAAA,QAAQ,EAAEhB,IAAI,CAACiB,YAHjB;AAIE,QAAA,KAAK,EAAEjB,IAAI,CAACkB,KAJd;AAKE,QAAA,QAAQ,EAAElB,IAAI,CAACmB,QALjB;AAME,QAAA,IAAI,EAAEnB,IAAI,CAACoB,IANb;AAOE,QAAA,OAAO,EAAE,mBAAM;AAACxD,UAAAA,UAAU,CAACwB,QAAX,CAAoB,aAApB,EAAmC;AAAC4B,YAAAA,QAAQ,EAAEhB,IAAI,CAACgB,QAAhB;AAA0BF,YAAAA,QAAQ,EAAEd,IAAI,CAACc,QAAzC;AAAmDC,YAAAA,QAAQ,EAAEf,IAAI,CAACiB,YAAlE;AAAgFC,YAAAA,KAAK,EAAElB,IAAI,CAACkB,KAA5F;AAAmGE,YAAAA,IAAI,EAAEpB,IAAI,CAACoB,IAA9G;AAAoHC,YAAAA,IAAI,EAAErB,IAAI,CAACqB,IAA/H;AACjDC,YAAAA,KAAK,EAAEtB,IAAI,CAACmB,QADqC;AAC3BI,YAAAA,SAAS,EAAEvB,IAAI,CAACuB;AADW,WAAnC;AAGjB,SAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAJhB;AAkBI,IAAA,YAAY,EAAE,sBAACvB,IAAD,EAAMD,KAAN;AAAA,aAAgBA,KAAhB;AAAA,KAlBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CA7EF,CAHF,CAJF;AAyHD;AAID,IAAMV,MAAM,GAAGmC,UAAU,CAACC,MAAX,CAAkB;AAC/BnC,EAAAA,aAAa,EAAE;AACboC,IAAAA,iBAAiB,EAAE,CADN;AAEb/B,IAAAA,UAAU,EAAE;AAFC,GADgB;AAK/BgC,EAAAA,YAAY,EAAC;AACXnC,IAAAA,QAAQ,EAAE;AADC,GALkB;AAQ/BoC,EAAAA,SAAS,EAAE;AACTlC,IAAAA,IAAI,EAAE,CADG;AAETU,IAAAA,eAAe,EAAE;AAFR,GARoB;AAY/ByB,EAAAA,MAAM,EAAE;AAAEzB,IAAAA,eAAe,EAAE,MAAnB;AAA2B0B,IAAAA,MAAM,EAAE;AAAnC,GAZuB;AAa/BC,EAAAA,QAAQ,EAAE;AACR7B,IAAAA,KAAK,EAAE,MADC;AAER4B,IAAAA,MAAM,EAAE,EAFA;AAGRE,IAAAA,YAAY,EAAE,EAHN;AAIR5B,IAAAA,eAAe,EAAE,MAJT;AAKR6B,IAAAA,cAAc,EAAE,QALR;AAMRtC,IAAAA,UAAU,EAAE;AANJ,GAbqB;AAqB/BuC,EAAAA,QAAQ,EAAE;AACRhC,IAAAA,KAAK,EAAE,MADC;AAER4B,IAAAA,MAAM,EAAE,GAFA;AAGRK,IAAAA,SAAS,EAAE,EAHH;AAIR/B,IAAAA,eAAe,EAAE,MAJT;AAKR6B,IAAAA,cAAc,EAAE,QALR;AAMRtC,IAAAA,UAAU,EAAE;AANJ,GArBqB;AA6B/ByC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GA7BkB;AA8B/B5B,EAAAA,OAAO,EAAE;AACP6B,IAAAA,MAAM,EAAE,CADD;AAEPR,IAAAA,MAAM,EAAE,EAFD;AAGPK,IAAAA,SAAS,EAAE,CAAC,EAHL;AAIPH,IAAAA,YAAY,EAAE,EAJP;AAKPC,IAAAA,cAAc,EAAE,QALT;AAMPtC,IAAAA,UAAU,EAAE,QANL;AAOP4C,IAAAA,aAAa,EAAE;AAPR,GA9BsB;AAuC/B5B,EAAAA,MAAM,EAAE;AACN6B,IAAAA,MAAM,EAAE,CADF;AAENtC,IAAAA,KAAK,EAAE,EAFD;AAGN4B,IAAAA,MAAM,EAAE,EAHF;AAINW,IAAAA,OAAO,EAAE,GAJH;AAKN9C,IAAAA,UAAU,EAAE,QALN;AAMNsC,IAAAA,cAAc,EAAE;AANV,GAvCuB;AA+C/BrB,EAAAA,cAAc,EAAE;AACd6B,IAAAA,OAAO,EAAE,CADK;AAEdJ,IAAAA,KAAK,EAAE;AAFO,GA/Ce;AAmD/BlC,EAAAA,WAAW,EAAE;AACXC,IAAAA,eAAe,EAAE,OADN;AAEXT,IAAAA,UAAU,EAAE,QAFD;AAGXsC,IAAAA,cAAc,EAAE;AAHL,GAnDkB;AAyD/B3B,EAAAA,WAAW,EAAE;AACXJ,IAAAA,KAAK,EAAGwC,UAAU,CAACtE,GAAX,CAAe,QAAf,EAAyB8B,KAAzB,GAA+B,CAAhC,GAAqC,CADjC;AAEX4B,IAAAA,MAAM,EAAE;AAFG,GAzDkB;AA6D/BhC,EAAAA,aAAa,EAAE;AACb6C,IAAAA,aAAa,EAAE;AADF,GA7DgB;AAgE/BpD,EAAAA,kBAAkB,EAAE;AAClBqD,IAAAA,WAAW,EAAE,SADK;AAElB1C,IAAAA,KAAK,EAAE,MAFW;AAGlB2C,IAAAA,WAAW,EAAE,CAHK;AAIlBzC,IAAAA,eAAe,EAAE,SAJC;AAKlBsB,IAAAA,iBAAiB,EAAE,EALD;AAMlBoB,IAAAA,eAAe,EAAE,CANC;AAOlBC,IAAAA,cAAc,EAAE,EAPE;AAQlBpD,IAAAA,UAAU,EAAE,QARM;AASlB4C,IAAAA,aAAa,EAAE,KATG;AAUlBS,IAAAA,YAAY,EAAE,EAVI;AAWlBX,IAAAA,KAAK,EAAE;AAXW,GAhEW;AA+E/BzC,EAAAA,aAAa,EAAE;AACbkC,IAAAA,MAAM,EAAE,EADK;AAEb5B,IAAAA,KAAK,EAAE;AAFM;AA/EgB,CAAlB,CAAf","sourcesContent":["import { Button, Text, StyleSheet, View, Alert, TextInput, ActivityIndicator, Image, TouchableHighlight, Dimensions} from 'react-native';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport { globalStyles } from '../global/globalStyles';\r\nimport { PFPrimaryButton, PFFlatList, PlantListItem, PFText, PFTextInput, PFCard, PFCardShop, PlantCategory, SearchPlant} from './../../components'\r\nimport SampleData from '../../utils/SampleData'\r\nimport ImageSlider from 'react-native-image-slider';\r\n\r\n\r\nimport firebase from 'firebase'\r\n\r\nimport { FlatList, ScrollView } from 'react-native-gesture-handler'\r\nimport { render } from 'react-dom';\r\n\r\nconst images = [\r\n      'https://firebasestorage.googleapis.com/v0/b/phytoflex-3f53f.appspot.com/o/Shop%2FBanner_1.jpg?alt=media&token=85e917d3-fb19-4772-a972-2b2adbecf717',\r\n      'https://firebasestorage.googleapis.com/v0/b/phytoflex-3f53f.appspot.com/o/Shop%2FBanner_2.jpg?alt=media&token=2b7262d3-005e-40ef-a044-eee8f6529558',\r\n      'https://firebasestorage.googleapis.com/v0/b/phytoflex-3f53f.appspot.com/o/Shop%2FBanner_3.jpg?alt=media&token=947ce232-6cac-4488-9b5c-83ad1f3b5aa4',\r\n      'https://firebasestorage.googleapis.com/v0/b/phytoflex-3f53f.appspot.com/o/Shop%2FBanner_4.jpg?alt=media&token=a2b2f513-2c8e-4d2f-93d7-654f83755a3c',\r\n]\r\n\r\nexport default function ShopHomePage({navigation})  {\r\n\r\n  const [refdata, setrefdata] = useState([]); // declaration\r\n  const [refnull, setrefnull] = useState(true);\r\n\r\n  \r\n\r\n\r\n\r\n    const getData = async() => {\r\n\r\n      // Get data inside document\r\n      firebase.firestore()\r\n      .collection('PlantListItem').get().then((res) => {\r\n        let comment = res.docs.map(doc => { \r\n          const data = doc.data();\r\n          const id = doc.id;\r\n          return {id, ...data}\r\n        })\r\n        setrefdata(comment);\r\n        console.log(refdata);\r\n        setrefnull(false);\r\n      }).catch((err) => {\r\n        Alert.alert(err)\r\n      })\r\n      \r\n    }\r\n    \r\nuseEffect(() => {\r\n\r\n    getData();\r\n  \r\n}, [])\r\n\r\n\r\n  function toShopSearch() {\r\n    navigation.navigate('ShopSearch');\r\n    \r\n  }\r\n  \r\n\r\n \r\n  return (\r\n   \r\n    \r\n    \r\n    <View style={styles.mainContainer} >\r\n\r\n     \r\n      <ScrollView> \r\n      <View style={styles.searchBoxContainer}>\r\n      <TextInput\r\n            style={{fontSize: 15, fontFamily: 'poppins-regular', flex: 1}}\r\n            placeholder='Search for Plants'\r\n            \r\n          />\r\n      <View style={{flex: 1, alignItems: 'flex-end'}}>\r\n      <Image\r\n            style={styles.searchBoxIcon}\r\n            source={require('../../assets/drawerIcons/plantCareIcons/search.png')}\r\n            resizeMode='contain'\r\n          />\r\n          </View>\r\n      \r\n      </View>\r\n\r\n      <View style={styles.bannerPadding}>\r\n\r\n      <ImageSlider\r\n          loop\r\n          autoPlayWithInterval={2000}\r\n          images={images}\r\n          onPress={({ index }) => alert(index)}\r\n          customSlide={({ index, item, style, width }) => (\r\n            // It's important to put style here because it's got offset inside\r\n            <View\r\n              key={index}\r\n              style={[\r\n                style,\r\n                styles.customSlide,\r\n                { backgroundColor: index % 2 === 0 ? '#F5FCFF' : '#F5FCFF' },\r\n              ]}\r\n            >\r\n              <Image source={{ uri: item }} style={styles.customImage} />\r\n            </View>\r\n          )}\r\n          customButtons={(position, move) => (\r\n            <View style={styles.buttons}>\r\n              {images.map((image, index) => {\r\n                return (\r\n                  <TouchableHighlight\r\n                    key={index}\r\n                    underlayColor=\"#ccc\"\r\n                    onPress={() => move(index)}\r\n                    style={styles.button}\r\n                  >\r\n                    <Text style={position === index && styles.buttonSelected}>\r\n                      {index + 1}\r\n                    </Text>\r\n                  </TouchableHighlight>\r\n                );\r\n              })}\r\n            </View>\r\n          )}\r\n        />\r\n      </View>\r\n      <View>\r\n      <PFText weight = \"semi-bold\" size = {18}> Categories</PFText>\r\n      \r\n      <PFFlatList\r\n            numColumns={4}\r\n            noDataMessage='No Plant item to post'\r\n            data={SampleData.plantCategory}\r\n            renderItem={(item) => (\r\n             \r\n              <PlantCategory\r\n                imageURL={item.imageURL}\r\n                categoryName={item.category}\r\n                onPress={() => Alert.alert(item.category)}\r\n              />\r\n            )}\r\n            keyExtractor={(item,index) => index}\r\n          />\r\n      \r\n        </View>\r\n              \r\n        <View>\r\n              \r\n        <PFText weight = \"semi-bold\" size = {18}>Discover Plants</PFText>\r\n        <PFFlatList\r\n            numColumns={2}\r\n            noDataMessage='Loading...'\r\n            data={refdata}\r\n            renderItem={(item) => (\r\n              <PFCardShop\r\n                imageURL={item.imageURL}\r\n                itemName={item.itemName}\r\n                category={item.categoryName}\r\n                price={item.price}\r\n                quantity={item.quantity}\r\n                sold={item.sold}\r\n                onPress={() => {navigation.navigate('ProductPage', {itemName: item.itemName, imageURL: item.imageURL, category: item.categoryName, price: item.price, sold: item.sold, size: item.size, \r\n                  stock: item.quantity, plantDesc: item.plantDesc})\r\n    \r\n              }}\r\n              />\r\n            )}\r\n            keyExtractor={(item,index) => index}\r\n          />\r\n        </View>\r\n              \r\n      </ScrollView>\r\n      \r\n      \r\n    \r\n    </View>\r\n    \r\n  \r\n  )\r\n\r\n  \r\n\r\n  \r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  mainContainer: {\r\n    paddingHorizontal: 5,\r\n    alignItems: 'center'\r\n  },\r\n  textContaine:{\r\n    fontSize: 50\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F5FCFF',\r\n  },\r\n  slider: { backgroundColor: '#000', height: 350 },\r\n  content1: {\r\n    width: '100%',\r\n    height: 50,\r\n    marginBottom: 10,\r\n    backgroundColor: '#000',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  content2: {\r\n    width: '100%',\r\n    height: 100,\r\n    marginTop: 10,\r\n    backgroundColor: '#000',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  contentText: { color: '#fff' },\r\n  buttons: {\r\n    zIndex: 1,\r\n    height: 15,\r\n    marginTop: -25,\r\n    marginBottom: 10,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n  },\r\n  button: {\r\n    margin: 3,\r\n    width: 15,\r\n    height: 15,\r\n    opacity: 0.9,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonSelected: {\r\n    opacity: 1,\r\n    color: 'white',\r\n  },\r\n  customSlide: {\r\n    backgroundColor: 'green',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    \r\n  },\r\n  customImage: {\r\n    width: (Dimensions.get('window').width/1) * 1,\r\n    height: 160,\r\n  },\r\n  bannerPadding: {\r\n    paddingBottom: 8,\r\n  },\r\n  searchBoxContainer: {\r\n    borderColor: '#1D4123',\r\n    width: '100%',\r\n    borderWidth: 1,\r\n    backgroundColor: '#F5F7FA',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 5,\r\n    marginVertical: 10,\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    borderRadius: 12,\r\n    color: '#1D4123'\r\n\r\n    // flex:1,\r\n  },\r\n  searchBoxIcon: {\r\n    height: 20,\r\n    width: 20\r\n  },\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\xx\\\\Desktop\\\\Phytoflex\\\\components\\\\FlatList\\\\PFFlatList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React from 'react';\nimport { PFText as Text, PFActivityIndicator as ActivityIndicator } from '..';\nimport Colors from \"../../utils/globalColors\";\nexport var PFFlatList = function PFFlatList(_ref) {\n  var data = _ref.data,\n      _ref$isLoading = _ref.isLoading,\n      isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,\n      _ref$renderItem = _ref.renderItem,\n      _renderItem = _ref$renderItem === void 0 ? function () {} : _ref$renderItem,\n      _ref$numColumns = _ref.numColumns,\n      numColumns = _ref$numColumns === void 0 ? 1 : _ref$numColumns,\n      _ref$styles = _ref.styles,\n      styles = _ref$styles === void 0 ? {} : _ref$styles,\n      _ref$noDataMessage = _ref.noDataMessage,\n      noDataMessage = _ref$noDataMessage === void 0 ? 'No Data' : _ref$noDataMessage,\n      renderHeader = _ref.renderHeader,\n      _ref$nestedScrollEnab = _ref.nestedScrollEnabled,\n      nestedScrollEnabled = _ref$nestedScrollEnab === void 0 ? false : _ref$nestedScrollEnab,\n      _ref$onEndReached = _ref.onEndReached,\n      onEndReached = _ref$onEndReached === void 0 ? function () {} : _ref$onEndReached,\n      _ref$onEndReachedThre = _ref.onEndReachedThreshold,\n      onEndReachedThreshold = _ref$onEndReachedThre === void 0 ? .5 : _ref$onEndReachedThre,\n      extraData = _ref.extraData,\n      ListFooterComponent = _ref.ListFooterComponent,\n      _ref$flatlistref = _ref.flatlistref,\n      flatlistref = _ref$flatlistref === void 0 ? null : _ref$flatlistref,\n      _ref$maxToRenderPerBa = _ref.maxToRenderPerBatch,\n      maxToRenderPerBatch = _ref$maxToRenderPerBa === void 0 ? 10 : _ref$maxToRenderPerBa,\n      _ref$initialNumToRend = _ref.initialNumToRender,\n      initialNumToRender = _ref$initialNumToRend === void 0 ? 10 : _ref$initialNumToRend;\n\n  return React.createElement(View, {\n    style: _objectSpread({\n      flex: 1\n    }, styles),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, data.length > 0 || isLoading == true ? React.createElement(FList, {\n    ref: flatlistref,\n    data: data,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    numColumns: numColumns,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return _renderItem(item, index);\n    },\n    ListHeaderComponent: renderHeader,\n    ListFooterComponent: React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, isLoading ? React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 31\n      }\n    }, React.createElement(ActivityIndicator, {\n      visible: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    })) : null, ListFooterComponent),\n    nestedScrollEnabled: nestedScrollEnabled,\n    onEndReached: onEndReached,\n    onEndReachedThreshold: onEndReachedThreshold,\n    extraData: extraData,\n    showsVerticalScrollIndicator: false,\n    initialNumToRender: initialNumToRender,\n    maxToRenderPerBatch: maxToRenderPerBatch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }) : React.createElement(View, {\n    style: noDataStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    weight: \"medium\",\n    size: 18,\n    center: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, noDataMessage), React.createElement(View, {\n    style: noDataStyles.imgContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  })));\n};\nvar noDataStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 20\n  },\n  imgContainer: {\n    width: 300,\n    height: 300\n  },\n  img: {\n    height: '100%',\n    width: '100%',\n    resizeMode: 'contain'\n  },\n  loadingIcon: {}\n});","map":{"version":3,"sources":["C:/Users/xx/Desktop/Phytoflex/components/FlatList/PFFlatList.js"],"names":["React","PFText","Text","PFActivityIndicator","ActivityIndicator","Colors","PFFlatList","data","isLoading","renderItem","numColumns","styles","noDataMessage","renderHeader","nestedScrollEnabled","onEndReached","onEndReachedThreshold","extraData","ListFooterComponent","flatlistref","maxToRenderPerBatch","initialNumToRender","flex","length","item","id","index","noDataStyles","container","imgContainer","StyleSheet","create","justifyContent","alignItems","marginHorizontal","width","height","img","resizeMode","loadingIcon"],"mappings":"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","sourcesContent":["import { StyleSheet, View, FlatList as FList, Image } from 'react-native'\r\nimport React from 'react'\r\n// import {ActivityIndicator} from '../FiplyComponents/ActivityIndicator'\r\n// import {Text} from '../FiplyComponents/Text'\r\n\r\nimport { PFText as Text, PFActivityIndicator as ActivityIndicator } from '..'\r\nimport Colors from '../../utils/globalColors'\r\n// import Colors from '../../../utils/Colors'\r\n\r\n\r\nexport const PFFlatList = ({\r\n    data, \r\n    isLoading = false,\r\n    renderItem = () => {},\r\n    numColumns = 1,\r\n    styles = {},\r\n    noDataMessage = 'No Data',\r\n    renderHeader,\r\n    nestedScrollEnabled = false,\r\n    onEndReached = () => {},\r\n    onEndReachedThreshold = .5,\r\n    extraData,\r\n    ListFooterComponent,\r\n    flatlistref = null,\r\n    maxToRenderPerBatch=10,\r\n    initialNumToRender=10,\r\n}) => {\r\n  return (\r\n    <View style={{ flex: 1, ...styles }}\t>\r\n \r\n        {\r\n            data.length > 0 || isLoading == true \r\n            ? (\r\n                <FList\r\n                    ref={flatlistref}\r\n                    data={data}\r\n                    keyExtractor={(item) => item.id}\r\n                    numColumns={numColumns}\r\n                    renderItem={({item, index}) => renderItem(item, index)}\r\n                    ListHeaderComponent={renderHeader}\r\n                    ListFooterComponent={\r\n                        <View>\r\n                            {\r\n                            isLoading \r\n                            ? <View>\r\n                                    <ActivityIndicator visible={true}/>\r\n                                </View> \r\n                            : null \r\n                            }\r\n                            {ListFooterComponent}\r\n                        </View>\r\n                    }\r\n                    nestedScrollEnabled={nestedScrollEnabled}\r\n                    onEndReached={onEndReached}\r\n                    onEndReachedThreshold={onEndReachedThreshold}\r\n                    extraData={extraData}\r\n                    showsVerticalScrollIndicator={false}\r\n                    initialNumToRender={initialNumToRender}\r\n                    maxToRenderPerBatch={maxToRenderPerBatch}\r\n                />\r\n            )\r\n            : (\r\n                <View style={noDataStyles.container}>\r\n                    <Text weight='medium' size={18} center>{noDataMessage}</Text>\r\n                    <View style={noDataStyles.imgContainer}>\r\n                        {/* <Image \r\n                            source={ require('../../../assets/img/nomessage.png') }\r\n                            style={noDataStyles.img}\r\n                        /> */}\r\n                    </View>\r\n                </View>\r\n            )\r\n\r\n        }\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nconst noDataStyles = StyleSheet.create({\r\n    container:{\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginHorizontal: 20,\r\n    },\r\n    imgContainer:{\r\n        width: 300,\r\n        height: 300\r\n    },\r\n    img:{\r\n        height: '100%',\r\n        width: '100%',\r\n        resizeMode: 'contain'\r\n    },\r\n    loadingIcon:{\r\n        \r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}
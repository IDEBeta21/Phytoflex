{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\xx\\\\Desktop\\\\Phytoflex\\\\node_modules\\\\react-native-dropdown-picker\\\\src\\\\components\\\\RenderListItem.js\";\nimport React, { useMemo, useCallback, memo } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LIST_MODE } from \"../constants\";\n\nfunction RenderListItem(_ref) {\n  var _this = this;\n\n  var rtl = _ref.rtl,\n      item = _ref.item,\n      label = _ref.label,\n      value = _ref.value,\n      parent = _ref.parent,\n      selectable = _ref.selectable,\n      disabled = _ref.disabled,\n      props = _ref.props,\n      custom = _ref.custom,\n      isSelected = _ref.isSelected,\n      IconComponent = _ref.IconComponent,\n      TickIconComponent = _ref.TickIconComponent,\n      listItemContainerStyle = _ref.listItemContainerStyle,\n      listItemLabelStyle = _ref.listItemLabelStyle,\n      listChildContainerStyle = _ref.listChildContainerStyle,\n      listParentContainerStyle = _ref.listParentContainerStyle,\n      listChildLabelStyle = _ref.listChildLabelStyle,\n      listParentLabelStyle = _ref.listParentLabelStyle,\n      customItemContainerStyle = _ref.customItemContainerStyle,\n      customItemLabelStyle = _ref.customItemLabelStyle,\n      selectedItemContainerStyle = _ref.selectedItemContainerStyle,\n      selectedItemLabelStyle = _ref.selectedItemLabelStyle,\n      disabledItemContainerStyle = _ref.disabledItemContainerStyle,\n      disabledItemLabelStyle = _ref.disabledItemLabelStyle,\n      containerStyle = _ref.containerStyle,\n      labelStyle = _ref.labelStyle,\n      categorySelectable = _ref.categorySelectable,\n      onPress = _ref.onPress,\n      setPosition = _ref.setPosition,\n      THEME = _ref.THEME;\n\n  var _TickIconComponent = useMemo(function () {\n    return isSelected && React.createElement(TickIconComponent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    });\n  }, [isSelected, TickIconComponent]);\n\n  var _listParentChildContainerStyle = useMemo(function () {\n    return parent !== null ? [THEME.listChildContainer].concat(_toConsumableArray([listChildContainerStyle].flat())) : [THEME.listParentContainer].concat(_toConsumableArray([listParentContainerStyle].flat()));\n  }, [THEME, rtl, listChildContainerStyle, listParentContainerStyle, parent]);\n\n  var _selectedItemContainerStyle = useMemo(function () {\n    return isSelected && selectedItemContainerStyle;\n  }, [isSelected, selectedItemContainerStyle]);\n\n  var _disabledItemContainerStyle = useMemo(function () {\n    return disabled && disabledItemContainerStyle;\n  }, [disabled, disabledItemContainerStyle]);\n\n  var _customItemContainerStyle = useMemo(function () {\n    return custom && [THEME.customItemContainer].concat(_toConsumableArray([customItemContainerStyle].flat()));\n  }, [THEME, custom, customItemContainerStyle]);\n\n  var _listItemContainerStyle = useMemo(function () {\n    return [].concat(_toConsumableArray([listItemContainerStyle].flat()), _toConsumableArray([_listParentChildContainerStyle].flat()), _toConsumableArray([containerStyle].flat()), _toConsumableArray([_selectedItemContainerStyle].flat()), _toConsumableArray([_customItemContainerStyle].flat()), _toConsumableArray([_disabledItemContainerStyle].flat()));\n  }, [listItemContainerStyle, _listParentChildContainerStyle, _selectedItemContainerStyle, _customItemContainerStyle, _disabledItemContainerStyle, containerStyle]);\n\n  var _listParentChildLabelStyle = useMemo(function () {\n    return parent !== null ? [THEME.listChildLabel].concat(_toConsumableArray([listChildLabelStyle].flat())) : [THEME.listParentLabel].concat(_toConsumableArray([listParentLabelStyle].flat()));\n  }, [THEME, listChildLabelStyle, listParentLabelStyle, parent]);\n\n  var _selectedItemLabelStyle = useMemo(function () {\n    return isSelected && selectedItemLabelStyle;\n  }, [isSelected, selectedItemLabelStyle]);\n\n  var _disabledItemLabelStyle = useMemo(function () {\n    return disabled && disabledItemLabelStyle;\n  }, [disabled, disabledItemLabelStyle]);\n\n  var _customItemLabelStyle = useMemo(function () {\n    return custom && [THEME.customItemLabel].concat(_toConsumableArray([customItemLabelStyle].flat()));\n  }, [THEME, custom, customItemLabelStyle]);\n\n  var _listItemLabelStyle = useMemo(function () {\n    return [].concat(_toConsumableArray([listItemLabelStyle].flat()), _toConsumableArray([_listParentChildLabelStyle].flat()), _toConsumableArray([labelStyle].flat()), _toConsumableArray([_selectedItemLabelStyle].flat()), _toConsumableArray([_customItemLabelStyle].flat()), _toConsumableArray([_disabledItemLabelStyle].flat()));\n  }, [listItemLabelStyle, _listParentChildLabelStyle, _selectedItemLabelStyle, _customItemLabelStyle, _disabledItemLabelStyle, labelStyle]);\n\n  var __onPress = useCallback(function () {\n    if (parent === null && !categorySelectable && selectable !== true) {\n      return;\n    }\n\n    onPress(item, custom);\n  }, [onPress, parent, categorySelectable, custom]);\n\n  var onLayout = useCallback(function (_ref2) {\n    var y = _ref2.nativeEvent.layout.y;\n    setPosition(value, y);\n  }, [value]);\n  return React.createElement(TouchableOpacity, _extends({\n    style: _listItemContainerStyle,\n    onPress: __onPress,\n    onLayout: onLayout\n  }, props, {\n    disabled: selectable === false || disabled,\n    testID: item.testID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }), IconComponent, React.createElement(Text, {\n    style: _listItemLabelStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, label), _TickIconComponent);\n}\n\nvar areEqual = function areEqual(nextProps, prevProps) {\n  if (nextProps.label !== prevProps.label) return false;\n  if (nextProps.value !== prevProps.value) return false;\n  if (nextProps.parent !== prevProps.parent) return false;\n  if (nextProps.selectable !== prevProps.selectable) return false;\n  if (nextProps.disabled !== prevProps.disabled) return false;\n  if (nextProps.custom !== prevProps.custom) return false;\n  if (nextProps.isSelected !== prevProps.isSelected) return false;\n  if (nextProps.categorySelectable !== prevProps.categorySelectable) return false;\n  if (nextProps.rtl !== prevProps.rtl) return false;\n  if (nextProps.theme !== prevProps.theme) return false;\n  return true;\n};\n\nexport default memo(RenderListItem, areEqual);","map":{"version":3,"sources":["C:/Users/xx/Desktop/Phytoflex/node_modules/react-native-dropdown-picker/src/components/RenderListItem.js"],"names":["React","useMemo","useCallback","memo","LIST_MODE","RenderListItem","rtl","item","label","value","parent","selectable","disabled","props","custom","isSelected","IconComponent","TickIconComponent","listItemContainerStyle","listItemLabelStyle","listChildContainerStyle","listParentContainerStyle","listChildLabelStyle","listParentLabelStyle","customItemContainerStyle","customItemLabelStyle","selectedItemContainerStyle","selectedItemLabelStyle","disabledItemContainerStyle","disabledItemLabelStyle","containerStyle","labelStyle","categorySelectable","onPress","setPosition","THEME","_TickIconComponent","_listParentChildContainerStyle","listChildContainer","flat","listParentContainer","_selectedItemContainerStyle","_disabledItemContainerStyle","_customItemContainerStyle","customItemContainer","_listItemContainerStyle","_listParentChildLabelStyle","listChildLabel","listParentLabel","_selectedItemLabelStyle","_disabledItemLabelStyle","_customItemLabelStyle","customItemLabel","_listItemLabelStyle","__onPress","onLayout","y","nativeEvent","layout","testID","areEqual","nextProps","prevProps","theme"],"mappings":"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","sourcesContent":["import React, {\r\n    useMemo,\r\n    useCallback,\r\n    memo\r\n} from 'react';\r\n\r\nimport {\r\n    Text,\r\n    TouchableOpacity\r\n} from 'react-native';\r\n\r\nimport { LIST_MODE } from '../constants';\r\n\r\nfunction RenderListItem({\r\n    rtl,\r\n    item,\r\n    label,\r\n    value,\r\n    parent,\r\n    selectable,\r\n    disabled,\r\n    props,\r\n    custom,\r\n    isSelected,\r\n    IconComponent,\r\n    TickIconComponent,\r\n    listItemContainerStyle,\r\n    listItemLabelStyle,\r\n    listChildContainerStyle,\r\n    listParentContainerStyle,\r\n    listChildLabelStyle,\r\n    listParentLabelStyle,\r\n    customItemContainerStyle,\r\n    customItemLabelStyle,\r\n    selectedItemContainerStyle,\r\n    selectedItemLabelStyle,\r\n    disabledItemContainerStyle,\r\n    disabledItemLabelStyle,\r\n    containerStyle,\r\n    labelStyle,\r\n    categorySelectable,\r\n    onPress,\r\n    setPosition,\r\n    THEME\r\n}) {\r\n    /**\r\n     * The tick icon component.\r\n     * @returns {JSX|null}\r\n     */\r\n    const _TickIconComponent = useMemo(() => isSelected && (\r\n        <TickIconComponent />\r\n    ), [isSelected, TickIconComponent]);\r\n\r\n    /**\r\n     * The list category container style.\r\n     * @returns {object}\r\n     */\r\n    const _listParentChildContainerStyle = useMemo(() => (parent !== null ? [\r\n        THEME.listChildContainer,\r\n        ...[listChildContainerStyle].flat()\r\n    ] : [\r\n        THEME.listParentContainer,\r\n        ...[listParentContainerStyle].flat()\r\n    ]), [THEME, rtl, listChildContainerStyle, listParentContainerStyle, parent])\r\n\r\n    /**\r\n     * The selected item container style.\r\n     * @returns {object}\r\n     */\r\n    const _selectedItemContainerStyle = useMemo(() => isSelected && selectedItemContainerStyle, [isSelected, selectedItemContainerStyle]);\r\n\r\n    /**\r\n     * The disabled item container style.\r\n     * @returns {object}\r\n     */\r\n    const _disabledItemContainerStyle = useMemo(() => disabled && disabledItemContainerStyle, [disabled, disabledItemContainerStyle]);\r\n\r\n    /**\r\n     * The custom container item style.\r\n     * @returns {JSX}\r\n     */\r\n    const _customItemContainerStyle = useMemo(() => custom && ([\r\n        THEME.customItemContainer,\r\n        ...[customItemContainerStyle].flat()\r\n    ]), [THEME, custom, customItemContainerStyle]);\r\n\r\n    /**\r\n     * The list item container style.\r\n     * @returns {object}\r\n     */\r\n    const _listItemContainerStyle = useMemo(() => ([\r\n        ...[listItemContainerStyle].flat(),\r\n        ...[_listParentChildContainerStyle].flat(),\r\n        ...[containerStyle].flat(),\r\n        ...[_selectedItemContainerStyle].flat(),\r\n        ...[_customItemContainerStyle].flat(),\r\n        ...[_disabledItemContainerStyle].flat(),\r\n    ]), [listItemContainerStyle, _listParentChildContainerStyle, _selectedItemContainerStyle, _customItemContainerStyle, _disabledItemContainerStyle, containerStyle]);\r\n\r\n    /**\r\n     * The list category label style.\r\n     * @returns {object}\r\n     */\r\n    const _listParentChildLabelStyle = useMemo(() => (parent !== null ? [\r\n        THEME.listChildLabel,\r\n        ...[listChildLabelStyle].flat(),\r\n    ] : [\r\n        THEME.listParentLabel,\r\n        ...[listParentLabelStyle].flat(),\r\n    ]), [THEME, listChildLabelStyle, listParentLabelStyle, parent]);\r\n\r\n    /**\r\n     * The selected item label style.\r\n     * @returns {object}\r\n     */\r\n    const _selectedItemLabelStyle = useMemo(() => isSelected && selectedItemLabelStyle, [isSelected, selectedItemLabelStyle]);\r\n\r\n    /**\r\n     * The disabled item label style.\r\n     * @returns {object}\r\n     */\r\n    const _disabledItemLabelStyle = useMemo(() => disabled && disabledItemLabelStyle, [disabled, disabledItemLabelStyle]);\r\n\r\n    /**\r\n     * The custom label item style.\r\n     * @returns {JSX}\r\n     */\r\n     const _customItemLabelStyle = useMemo(() => custom && ([\r\n        THEME.customItemLabel,\r\n        ...[customItemLabelStyle].flat()\r\n    ]), [THEME, custom, customItemLabelStyle]);\r\n\r\n    /**\r\n     * The list item label style.\r\n     * @returns {object}\r\n     */\r\n    const _listItemLabelStyle = useMemo(() => ([\r\n        ...[listItemLabelStyle].flat(),\r\n        ...[_listParentChildLabelStyle].flat(),\r\n        ...[labelStyle].flat(),\r\n        ...[_selectedItemLabelStyle].flat(),\r\n        ...[_customItemLabelStyle].flat(),\r\n        ...[_disabledItemLabelStyle].flat(),\r\n    ]), [listItemLabelStyle, _listParentChildLabelStyle, _selectedItemLabelStyle, _customItemLabelStyle, _disabledItemLabelStyle, labelStyle]);\r\n\r\n    /**\r\n     * onPress.\r\n     */\r\n    const __onPress = useCallback(() => {\r\n        if (parent === null && ! categorySelectable && selectable !== true) {\r\n            return;\r\n        }\r\n\r\n        onPress(item, custom);\r\n    }, [onPress, parent, categorySelectable, custom]);\r\n\r\n    /**\r\n     * onLayout.\r\n     */\r\n    const onLayout = useCallback(({nativeEvent: {layout: {y}}}) => {\r\n        setPosition(value, y);\r\n    }, [value]);\r\n\r\n    return (\r\n        <TouchableOpacity style={_listItemContainerStyle} onPress={__onPress} onLayout={onLayout} {...props} disabled={selectable === false || disabled} testID={item.testID}>\r\n            {IconComponent}\r\n            <Text style={_listItemLabelStyle}>\r\n                {label}\r\n            </Text>\r\n            {_TickIconComponent}\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n\r\nconst areEqual = (nextProps, prevProps) => {\r\n    if (nextProps.label !== prevProps.label)\r\n        return false;\r\n    if (nextProps.value !== prevProps.value)\r\n        return false;\r\n    if (nextProps.parent !== prevProps.parent)\r\n        return false;\r\n    if (nextProps.selectable !== prevProps.selectable)\r\n        return false;\r\n    if (nextProps.disabled !== prevProps.disabled)\r\n        return false;\r\n    if (nextProps.custom !== prevProps.custom)\r\n        return false;\r\n    if (nextProps.isSelected !== prevProps.isSelected)\r\n        return false;\r\n    if (nextProps.categorySelectable !== prevProps.categorySelectable)\r\n        return false;\r\n    if (nextProps.rtl !== prevProps.rtl)\r\n        return false;\r\n    if (nextProps.theme !== prevProps.theme)\r\n        return false;\r\n    \r\n    return true;\r\n}\r\n\r\nexport default memo(RenderListItem, areEqual);"]},"metadata":{},"sourceType":"module"}
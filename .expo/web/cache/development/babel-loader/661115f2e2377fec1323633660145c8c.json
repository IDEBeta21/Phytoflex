{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\xx\\\\Desktop\\\\Phytoflex\\\\components\\\\Modals\\\\PFModalLogin.js\";\n\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TouchableNativeFeedbackBase } from \"react-native-web/dist/index\";\nimport { color } from \"react-native-reanimated\";\nimport { PFText } from \"..\";\nimport Colors from \"../../utils/globalColors\";\nexport var PFModalLogin = function PFModalLogin(_ref) {\n  var title = _ref.title,\n      message = _ref.message,\n      visible = _ref.visible,\n      modalClose = _ref.modalClose;\n\n  var _useState = useState(visible),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: visible,\n    onRequestClose: function onRequestClose() {\n      modalClose();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, React.createElement(PFText, {\n    style: styles.modalTextTitle,\n    weight: \"semi-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, title), React.createElement(PFText, {\n    style: styles.modalTextMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, message), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      modalClose();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, React.createElement(PFText, {\n    style: styles.primaryButtonText,\n    color: 'white',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \"LOGIN\"))))));\n};\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 8,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 8,\n    padding: 10,\n    elevation: 2\n  },\n  buttonClose: {\n    backgroundColor: Colors.secondary\n  },\n  primaryButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalTextTitl: {},\n  modalTextMessage: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/xx/Desktop/Phytoflex/components/Modals/PFModalLogin.js"],"names":["React","useState","TouchableNativeFeedbackBase","color","PFText","Colors","PFModalLogin","title","message","visible","modalClose","modalVisible","setModalVisible","styles","centeredView","modalView","modalTextTitle","modalTextMessage","button","buttonClose","primaryButtonText","StyleSheet","create","flex","justifyContent","alignItems","marginTop","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","secondary","fontWeight","textAlign","modalTextTitl","marginBottom"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;SAC0DC,2B;AAC1D,SAASC,KAAT,QAAsB,yBAAtB;AAEA,SAASC,MAAT,QAAuB,IAAvB;AAEA,OAAOC,MAAP;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA2C;AAAA,MAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AACrE,kBAAwCT,QAAQ,CAACQ,OAAD,CAAhD;AAAA;AAAA,MAAOE,YAAP;AAAA,MAAqBC,eAArB;;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,aAAa,EAAC,OADhB;AAEE,IAAA,WAAW,EAAE,IAFf;AAIE,IAAA,OAAO,EAAEL,OAJX;AAKE,IAAA,cAAc,EAAE,0BAAM;AAEpBC,MAAAA,UAAU;AACX,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEF,MAAM,CAACG,cAAtB;AAAsC,IAAA,MAAM,EAAE,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4DT,KAA5D,CADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEM,MAAM,CAACI,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCT,OAAzC,CAFF,EAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE,CAACK,MAAM,CAACK,MAAR,EAAgBL,MAAM,CAACM,WAAvB,CADT;AAGE,IAAA,OAAO,EAAE,mBAAM;AAACT,MAAAA,UAAU;AAAG,KAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEG,MAAM,CAACO,iBAAtB;AAAyC,IAAA,KAAK,EAAE,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CAHF,CADF,CAVF,CADF,CADF;AAmCD,CArCM;AAuCP,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,YAAY,EAAE;AACZS,IAAAA,IAAI,EAAE,CADM;AAEZC,IAAAA,cAAc,EAAE,QAFJ;AAGZC,IAAAA,UAAU,EAAE,QAHA;AAIZC,IAAAA,SAAS,EAAE;AAJC,GADiB;AAO/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,eAAe,EAAE,OAFR;AAGTC,IAAAA,YAAY,EAAE,CAHL;AAITC,IAAAA,OAAO,EAAE,EAJA;AAKTL,IAAAA,UAAU,EAAE,QALH;AAMTM,IAAAA,WAAW,EAAE,MANJ;AAOTC,IAAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAPL;AAWTC,IAAAA,aAAa,EAAE,IAXN;AAYTC,IAAAA,YAAY,EAAE,CAZL;AAaTC,IAAAA,SAAS,EAAE;AAbF,GAPoB;AAsB/BnB,EAAAA,MAAM,EAAE;AACNW,IAAAA,YAAY,EAAE,CADR;AAENC,IAAAA,OAAO,EAAE,EAFH;AAGNO,IAAAA,SAAS,EAAE;AAHL,GAtBuB;AA2B/BlB,EAAAA,WAAW,EAAE;AACXS,IAAAA,eAAe,EAAEvB,MAAM,CAACiC;AADb,GA3BkB;AA8B/BlB,EAAAA,iBAAiB,EAAE;AACjBjB,IAAAA,KAAK,EAAE,OADU;AAEjBoC,IAAAA,UAAU,EAAE,MAFK;AAGjBC,IAAAA,SAAS,EAAE;AAHM,GA9BY;AAmC/BC,EAAAA,aAAa,EAAE,EAnCgB;AAsC/BxB,EAAAA,gBAAgB,EAAE;AAChByB,IAAAA,YAAY,EAAE,EADE;AAEhBF,IAAAA,SAAS,EAAE;AAFK;AAtCa,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Alert, Modal, StyleSheet, Text, Pressable, View, TouchableNativeFeedbackBase } from \"react-native\";\r\nimport { color } from \"react-native-reanimated\";\r\n\r\nimport { PFText } from \"..\";\r\n\r\nimport Colors from \"../../utils/globalColors\";\r\n\r\nexport const PFModalLogin = ({title, message, visible, modalClose}) => {\r\n  const [modalVisible, setModalVisible] = useState(visible);\r\n  return (\r\n    <View style={styles.centeredView}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        // visible={modalVisible}\r\n        visible={visible}\r\n        onRequestClose={() => {\r\n          // Alert.alert(\"Modal has been closed.\");\r\n          modalClose()\r\n        }}\r\n      >\r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n            <PFText style={styles.modalTextTitle} weight={\"semi-bold\"}>{title}</PFText>\r\n            <PFText style={styles.modalTextMessage}>{message}</PFText>\r\n            <Pressable\r\n              style={[styles.button, styles.buttonClose]}\r\n            //   onPress={() => setModalVisible(false)}\r\n              onPress={() => {modalClose()}}\r\n            //   onPress={() => {this.visible}}\r\n            >\r\n              <PFText style={styles.primaryButtonText} color={'white'}>LOGIN</PFText>\r\n            </Pressable>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n\r\n      {/* <Modal visible={visible}>\r\n          <View>\r\n              <Text>Hello world</Text>\r\n          </View>\r\n      </Modal> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 8,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5\r\n  },\r\n  button: {\r\n    borderRadius: 8,\r\n    padding: 10,\r\n    elevation: 2,\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: Colors.secondary,\r\n  },\r\n  primaryButtonText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalTextTitl: {\r\n\r\n  },\r\n  modalTextMessage: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\"\r\n  }\r\n});\r\n\r\n// export default PFModalLogin;"]},"metadata":{},"sourceType":"module"}
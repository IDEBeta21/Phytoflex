{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StarIcon from \"./StarIcon\";\nimport { getStars } from \"./utils\";\nvar defaultColor = \"#fdd835\";\nvar defaultAnimationConfig = {\n  easing: Easing.elastic(2),\n  duration: 300,\n  scale: 1.2,\n  delay: 300\n};\n\nvar StarRating = function StarRating(_ref) {\n  var rating = _ref.rating,\n      _ref$maxStars = _ref.maxStars,\n      maxStars = _ref$maxStars === void 0 ? 5 : _ref$maxStars,\n      _ref$starSize = _ref.starSize,\n      starSize = _ref$starSize === void 0 ? 32 : _ref$starSize,\n      onChange = _ref.onChange,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? defaultColor : _ref$color,\n      _ref$emptyColor = _ref.emptyColor,\n      emptyColor = _ref$emptyColor === void 0 ? color : _ref$emptyColor,\n      _ref$enableHalfStar = _ref.enableHalfStar,\n      enableHalfStar = _ref$enableHalfStar === void 0 ? true : _ref$enableHalfStar,\n      _ref$enableSwiping = _ref.enableSwiping,\n      enableSwiping = _ref$enableSwiping === void 0 ? true : _ref$enableSwiping,\n      _ref$animationConfig = _ref.animationConfig,\n      animationConfig = _ref$animationConfig === void 0 ? defaultAnimationConfig : _ref$animationConfig,\n      style = _ref.style,\n      starStyle = _ref.starStyle,\n      testID = _ref.testID;\n  var width = useRef();\n  var ref = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isInteracting = _useState2[0],\n      setInteracting = _useState2[1];\n\n  var handleInteraction = function handleInteraction(x) {\n    if (width.current) {\n      var newRating = Math.max(0, Math.min(Math.round(x / width.current * maxStars * 2 + 0.2) / 2, maxStars));\n      onChange(enableHalfStar ? newRating : Math.ceil(newRating));\n    }\n  };\n\n  var _useState3 = useState(function () {\n    return PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return true;\n      },\n      onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {\n        return true;\n      },\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {\n        return true;\n      },\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n        return true;\n      },\n      onPanResponderMove: function onPanResponderMove(e) {\n        if (enableSwiping) {\n          handleInteraction(e.nativeEvent.locationX);\n        }\n      },\n      onPanResponderStart: function onPanResponderStart(e) {\n        handleInteraction(e.nativeEvent.locationX);\n        setInteracting(true);\n      },\n      onPanResponderEnd: function onPanResponderEnd() {\n        setTimeout(function () {\n          setInteracting(false);\n        }, animationConfig.delay || defaultAnimationConfig.delay);\n      }\n    });\n  }),\n      _useState4 = _slicedToArray(_useState3, 1),\n      panResponder = _useState4[0];\n\n  return React.createElement(View, _extends({\n    ref: ref,\n    style: [styles.starRating, style]\n  }, panResponder.panHandlers, {\n    onLayout: function onLayout() {\n      if (ref.current) {\n        ref.current.measure(function (_x, _y, w, _h) {\n          return width.current = w;\n        });\n      }\n    },\n    testID: testID\n  }), getStars(rating, maxStars).map(function (starType, i) {\n    return React.createElement(AnimatedIcon, {\n      key: i,\n      active: isInteracting && rating - i >= 0.5,\n      animationConfig: animationConfig,\n      style: starStyle\n    }, React.createElement(StarIcon, {\n      type: starType,\n      size: starSize,\n      color: starType === \"empty\" ? emptyColor : color\n    }));\n  }));\n};\n\nvar AnimatedIcon = function AnimatedIcon(_ref2) {\n  var active = _ref2.active,\n      animationConfig = _ref2.animationConfig,\n      children = _ref2.children,\n      style = _ref2.style;\n  var _animationConfig$scal = animationConfig.scale,\n      scale = _animationConfig$scal === void 0 ? defaultAnimationConfig.scale : _animationConfig$scal,\n      _animationConfig$easi = animationConfig.easing,\n      easing = _animationConfig$easi === void 0 ? defaultAnimationConfig.easing : _animationConfig$easi,\n      _animationConfig$dura = animationConfig.duration,\n      duration = _animationConfig$dura === void 0 ? defaultAnimationConfig.duration : _animationConfig$dura;\n  var animatedSize = useRef(new Animated.Value(active ? scale : 1));\n  useEffect(function () {\n    var animation = Animated.timing(animatedSize.current, {\n      toValue: active ? scale : 1,\n      useNativeDriver: true,\n      easing: easing,\n      duration: duration\n    });\n    animation.start();\n    return animation.stop;\n  }, [active, scale, easing, duration]);\n  return React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [styles.star, style, {\n      transform: [{\n        scale: animatedSize.current\n      }]\n    }]\n  }, children);\n};\n\nvar styles = StyleSheet.create({\n  starRating: {\n    flexDirection: \"row\",\n    alignSelf: \"flex-start\"\n  },\n  star: {\n    marginHorizontal: 5\n  }\n});\nexport default StarRating;","map":{"version":3,"sources":["StarRating.tsx"],"names":["defaultColor","defaultAnimationConfig","easing","Easing","duration","scale","delay","StarRating","maxStars","starSize","color","emptyColor","enableHalfStar","enableSwiping","animationConfig","testID","width","useRef","ref","useState","handleInteraction","x","newRating","Math","onChange","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","e","onPanResponderStart","setInteracting","onPanResponderEnd","setTimeout","styles","panResponder","isInteracting","rating","starStyle","starType","AnimatedIcon","style","animatedSize","Animated","active","useEffect","animation","toValue","useNativeDriver","transform","current","starRating","flexDirection","alignSelf","star","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport {\n    PanResponder,\n    StyleSheet,\n    View,\n    StyleProp,\n    ViewStyle,\n    Animated,\n    Easing,\n} from \"react-native\";\nimport StarIcon from \"./StarIcon\";\nimport { getStars } from \"./utils\";\n\ntype AnimationConfig = {\n    easing?: (value: number) => number;\n    duration?: number;\n    delay?: number;\n    scale?: number;\n};\n\ntype StarRatingProps = {\n    rating: number;\n    onChange: (rating: number) => void;\n    minRating?: number;\n    color?: string;\n    emptyColor?: string;\n    maxStars?: number;\n    starSize?: number;\n    enableHalfStar?: boolean;\n    enableSwiping?: boolean;\n    style?: StyleProp<ViewStyle>;\n    starStyle?: StyleProp<ViewStyle>;\n    animationConfig?: AnimationConfig;\n    testID?: string;\n};\n\nconst defaultColor = \"#fdd835\";\nconst defaultAnimationConfig: Required<AnimationConfig> = {\n    easing: Easing.elastic(2),\n    duration: 300,\n    scale: 1.2,\n    delay: 300,\n};\n\nconst StarRating: React.FC<StarRatingProps> = ({\n    rating,\n    maxStars = 5,\n    starSize = 32,\n    onChange,\n    color = defaultColor,\n    emptyColor = color,\n    enableHalfStar = true,\n    enableSwiping = true,\n    animationConfig = defaultAnimationConfig,\n    style,\n    starStyle,\n    testID,\n}) => {\n    const width = useRef<number>();\n    const ref = useRef<View>(null);\n    const [isInteracting, setInteracting] = useState(false);\n\n    const handleInteraction = (x: number) => {\n        if (width.current) {\n            const newRating = Math.max(\n                0,\n                Math.min(\n                    Math.round((x / width.current) * maxStars * 2 + 0.2) / 2,\n                    maxStars\n                )\n            );\n            onChange(enableHalfStar ? newRating : Math.ceil(newRating));\n        }\n    };\n\n    const [panResponder] = useState(() =>\n        PanResponder.create({\n            onStartShouldSetPanResponder: () => true,\n            onStartShouldSetPanResponderCapture: () => true,\n            onMoveShouldSetPanResponder: () => true,\n            onMoveShouldSetPanResponderCapture: () => true,\n            onPanResponderMove: e => {\n                if (enableSwiping) {\n                    handleInteraction(e.nativeEvent.locationX);\n                }\n            },\n            onPanResponderStart: e => {\n                handleInteraction(e.nativeEvent.locationX);\n                setInteracting(true);\n            },\n            onPanResponderEnd: () => {\n                setTimeout(() => {\n                    setInteracting(false);\n                }, animationConfig.delay || defaultAnimationConfig.delay);\n            },\n        })\n    );\n\n    return (\n        <View\n            ref={ref}\n            style={[styles.starRating, style]}\n            {...panResponder.panHandlers}\n            onLayout={() => {\n                if (ref.current) {\n                    ref.current.measure((_x, _y, w, _h) => (width.current = w));\n                }\n            }}\n            testID={testID}>\n            {getStars(rating, maxStars).map((starType, i) => {\n                return (\n                    <AnimatedIcon\n                        key={i}\n                        active={isInteracting && rating - i >= 0.5}\n                        animationConfig={animationConfig}\n                        style={starStyle}>\n                        <StarIcon\n                            type={starType}\n                            size={starSize}\n                            color={starType === \"empty\" ? emptyColor : color}\n                        />\n                    </AnimatedIcon>\n                );\n            })}\n        </View>\n    );\n};\n\ntype AnimatedIconProps = {\n    active: boolean;\n    children: React.ReactElement;\n    animationConfig: AnimationConfig;\n    style?: StyleProp<ViewStyle>;\n};\n\nconst AnimatedIcon: React.FC<AnimatedIconProps> = ({\n    active,\n    animationConfig,\n    children,\n    style,\n}) => {\n    const {\n        scale = defaultAnimationConfig.scale,\n        easing = defaultAnimationConfig.easing,\n        duration = defaultAnimationConfig.duration,\n    } = animationConfig;\n\n    const animatedSize = useRef(new Animated.Value(active ? scale : 1));\n\n    useEffect(() => {\n        const animation = Animated.timing(animatedSize.current, {\n            toValue: active ? scale : 1,\n            useNativeDriver: true,\n            easing,\n            duration,\n        });\n\n        animation.start();\n        return animation.stop;\n    }, [active, scale, easing, duration]);\n\n    return (\n        <Animated.View\n            pointerEvents=\"none\"\n            style={[\n                styles.star,\n                style,\n                {\n                    transform: [\n                        {\n                            scale: animatedSize.current,\n                        },\n                    ],\n                },\n            ]}>\n            {children}\n        </Animated.View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    starRating: {\n        flexDirection: \"row\",\n        alignSelf: \"flex-start\",\n    },\n    star: {\n        marginHorizontal: 5,\n    },\n});\n\nexport default StarRating;\n"]},"metadata":{},"sourceType":"module"}
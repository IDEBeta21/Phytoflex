{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\xx\\\\Desktop\\\\Phytoflex\\\\screens\\\\global\\\\FirebaseSample.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React, { Component, useState } from 'react';\nimport { PFPrimaryButton, PFFlatList, PlantListItem, PFText, PFCard } from \"./../../components\";\nimport SampleData from \"../../utils/SampleData\";\nimport firebase from 'firebase';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nexport default function FirebaseSample() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      refdata = _useState2[0],\n      setrefdata = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refnull = _useState4[0],\n      setrefnull = _useState4[1];\n\n  function addData() {\n    firebase.firestore().collection('Comment').add({\n      Comment: 'I like this comment',\n      Date: '2022-02-22',\n      PostId: 'Postid',\n      UserId: 'userid'\n    }).then(function (res) {\n      Alert.alert(res);\n    }).catch(function (err) {\n      Alert.alert(err);\n    });\n  }\n\n  function onPostClick(id) {}\n\n  var getData = function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            firebase.firestore().collection('Comment').get().then(function (res) {\n              var comment = res.docs.map(function (doc) {\n                var data = doc.data();\n                var id = doc.id;\n                return _objectSpread({\n                  id: id\n                }, data);\n              });\n              setrefdata(comment);\n              console.log(refdata);\n              setrefnull(false);\n            }).catch(function (err) {\n              Alert.alert(err);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"FirebaseSample\"), React.createElement(PFText, {\n    weight: \"semi-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Hello world\"), React.createElement(PFPrimaryButton, {\n    icon: \"eye\",\n    title: \"Click Me\",\n    onPress: function onPress() {\n      return getData();\n    },\n    roundness: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(PFFlatList, {\n    numColumns: 1,\n    noDataMessage: \"No Plant item to post\",\n    data: refdata,\n    renderItem: function renderItem(item) {\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, React.createElement(PFText, {\n        title: item.Comment,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }\n      }, item.Comment), React.createElement(PFText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }\n      }, item.Date));\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  mainContainer: {\n    marginTop: 50\n  }\n});","map":{"version":3,"sources":["C:/Users/xx/Desktop/Phytoflex/screens/global/FirebaseSample.js"],"names":["React","Component","useState","PFPrimaryButton","PFFlatList","PlantListItem","PFText","PFCard","SampleData","firebase","FlatList","ScrollView","FirebaseSample","refdata","setrefdata","refnull","setrefnull","addData","firestore","collection","add","Comment","Date","PostId","UserId","then","res","Alert","alert","catch","err","onPostClick","id","getData","get","comment","docs","map","doc","data","console","log","styles","mainContainer","item","index","StyleSheet","create","marginTop"],"mappings":"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","sourcesContent":["import { Text, StyleSheet, View, Alert } from 'react-native'\r\nimport React, { Component, useState } from 'react'\r\n\r\nimport { PFPrimaryButton, PFFlatList, PlantListItem, PFText, PFCard} from './../../components'\r\nimport SampleData from '../../utils/SampleData'\r\n\r\nimport firebase from 'firebase'\r\nimport { FlatList, ScrollView } from 'react-native-gesture-handler'\r\n\r\nexport default function FirebaseSample(){\r\n  \r\n\r\n  const [refdata, setrefdata] = useState([]); // declaration\r\n  const [refnull, setrefnull] = useState(true);\r\n\r\n  function addData(){\r\n    firebase.firestore().collection('Comment').add({\r\n      Comment: 'I like this comment',\r\n      Date: '2022-02-22',\r\n      PostId: 'Postid',\r\n      UserId: 'userid'\r\n    }).then((res) => {\r\n      Alert.alert(res)\r\n    }).catch((err) => {\r\n      Alert.alert(err)\r\n    })\r\n  }\r\n\r\n  function onPostClick(id){\r\n\r\n  }\r\n\r\n  const getData = async() => {\r\n\r\n    // Get data inside document\r\n    firebase.firestore()\r\n    .collection('Comment').get().then((res) => {\r\n      let comment = res.docs.map(doc => { // saka gumamit ako ng map\r\n        const data = doc.data();\r\n        const id = doc.id;\r\n        return {id, ...data}\r\n      })\r\n      setrefdata(comment);\r\n      console.log(refdata);\r\n      setrefnull(false);\r\n    }).catch((err) => {\r\n      Alert.alert(err)\r\n    })\r\n\r\n    // Get list of data inside collection\r\n    // firebase.firestore().collection('Comment').get()\r\n    // .then((res) => {\r\n    //   res.forEach((data) => {\r\n    //     // console.log(data.data())\r\n    //   })\r\n    // }).catch((err) => {\r\n    //   Alert.alert(err)\r\n    // })\r\n  }\r\n\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n      <ScrollView>\r\n        <Text>FirebaseSample</Text>\r\n        <PFText weight='semi-bold'>Hello world</PFText>\r\n\r\n        <PFPrimaryButton \r\n          icon='eye' \r\n          title='Click Me' \r\n          onPress={() => getData()}\r\n          roundness={7}/>\r\n\r\n        <View>\r\n          \r\n          {/* <PFFlatList\r\n            numColumns={1}\r\n            noDataMessage='No Plant item to post'\r\n            data={SampleData.itemList}\r\n            renderItem={(item) => (\r\n              <PlantListItem \r\n                imageURL={item.imageURL}\r\n                itemName={item.itemName}\r\n                category={item.category}\r\n                price={item.price}\r\n                quantity={item.quantity}\r\n                onPress={() => Alert.alert(item.itemName)}\r\n              />\r\n            )}\r\n            keyExtractor={(item,index) => index}\r\n          /> */}\r\n\r\n          <PFFlatList\r\n            numColumns={1}\r\n            noDataMessage='No Plant item to post'\r\n            data={refdata}\r\n            renderItem={(item) => {\r\n              return(\r\n                <View>\r\n                  <PFText title={item.Comment}>{item.Comment}</PFText>\r\n                  <PFText>{item.Date}</PFText>\r\n                </View>\r\n              )\r\n            }}\r\n            keyExtractor={(item,index) => index}\r\n          />\r\n\r\n          \r\n\r\n          \r\n        </View>\r\n      </ScrollView>\r\n      \r\n      \r\n      \r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  mainContainer: {\r\n    marginTop: 50\r\n    // flex: 1,\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center'\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}
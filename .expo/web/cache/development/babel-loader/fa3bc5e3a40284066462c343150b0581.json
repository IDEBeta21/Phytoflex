{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Ian\\\\Documents\\\\_Project\\\\Phytoflex\\\\screens\\\\landing\\\\signup.js\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { render } from 'react-dom';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from 'firebase';\nimport { getAuth, createUserWithEmailAndPassword } from \"@firebase/auth\";\nexport default function SignUpScreen(_ref) {\n  var firebaseConfig = _ref.firebaseConfig;\n  var def_usrname = \"admin1\";\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userEmail = _useState2[0],\n      setUserEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userPass = _useState4[0],\n      setUserPass = _useState4[1];\n\n  function signUpClick() {\n    var auth = firebase.auth();\n    firebase.auth().createUserWithEmailAndPassword(userEmail, userPass).then(function (result) {\n      Alert.alert(result.message);\n      console.log(result);\n    }).catch(function (error) {\n      Alert.alert(error.message);\n      console.log(error);\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.loginContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.logoView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: {\n      uri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"For Plantitos \"), React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \" and Plantitas\")), React.createElement(View, {\n    style: {\n      paddingHorizontal: 30,\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Username\"), React.createElement(TextInput, {\n    style: styles.textbox,\n    placeholder: \"i.e. NameIsDev21\",\n    onChangeText: function onChangeText(text) {\n      return setUserEmail(text);\n    },\n    value: userEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    style: styles.textbox,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setUserPass(text);\n    },\n    value: userPass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return signUpClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.buttonArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"LOGIN\")))));\n}\nvar styles = StyleSheet.create({\n  loginContainer: {\n    flex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logoView: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 25\n  },\n  headerText: {\n    fontSize: 30,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textbox: {\n    borderColor: 'black',\n    borderBottomWidth: 1,\n    padding: 10,\n    fontSize: 15\n  },\n  label: {\n    marginVertical: 10,\n    fontSize: 20\n  },\n  logo: {\n    width: 200,\n    height: 200,\n    backgroundColor: '#040',\n    borderRadius: 12\n  },\n  buttonArea: {\n    marginTop: 40,\n    padding: 15,\n    backgroundColor: 'green',\n    borderRadius: 15,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 1,\n    elevation: 5\n  }\n});","map":{"version":3,"sources":["D:/Ian/Documents/_Project/Phytoflex/screens/landing/signup.js"],"names":["React","useState","render","firebase","getAuth","createUserWithEmailAndPassword","SignUpScreen","firebaseConfig","def_usrname","userEmail","setUserEmail","userPass","setUserPass","signUpClick","auth","then","result","Alert","alert","message","console","log","catch","error","styles","loginContainer","logoView","logo","uri","headerText","paddingHorizontal","flex","label","textbox","text","buttonArea","color","fontSize","StyleSheet","create","container","backgroundColor","alignItems","justifyContent","paddingVertical","borderColor","borderBottomWidth","padding","marginVertical","width","height","borderRadius","marginTop","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {useState}from 'react';\r\nimport { render } from 'react-dom';\r\nimport { \r\n    View, ScrollView, KeyboardAvoidingView, \r\n    Image, Text, TextInput, TouchableOpacity,  \r\n    StyleSheet,\r\n    Alert\r\n} from 'react-native';\r\n\r\nimport firebase from 'firebase';\r\nimport { getAuth, createUserWithEmailAndPassword } from \"@firebase/auth\";\r\n\r\nexport default function SignUpScreen({firebaseConfig}){\r\n    \r\n    const def_usrname = \"admin1\"\r\n    \r\n    const [userEmail, setUserEmail] = useState('');\r\n    const [userPass, setUserPass] = useState('');\r\n    \r\n\r\n    function signUpClick() {\r\n        const auth = firebase.auth();\r\n        firebase.auth().createUserWithEmailAndPassword(userEmail, userPass)\r\n            .then((result) => {\r\n                Alert.alert(result.message);\r\n                console.log(result);\r\n            })\r\n            .catch((error) => {\r\n                Alert.alert(error.message);\r\n                console.log(error);\r\n            });\r\n    }\r\n    \r\n    return (\r\n        <View style={styles.loginContainer}>\r\n            {/* Display Header */}\r\n            \r\n            {/* Make the view scrollable */}\r\n            {/* To detect virtual keyboard */}\r\n            {/* <KeyboardAvoidingView\r\n            behavior={Platform.OS === \"android\" ? \"padding\" : \"height\"}\r\n            > */}\r\n                \r\n                {/* Logo area */}\r\n                <View style={styles.logoView}>\r\n                    <Image\r\n                    style = {styles.logo}\r\n                    source={{\r\n                        uri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png',\r\n                    }}\r\n                    />\r\n                    <Text style={styles.headerText}>For Plantitos </Text>\r\n                    <Text style={styles.headerText}> and Plantitas</Text>\r\n                </View>\r\n                \r\n                <View style={({paddingHorizontal: 30, flex: 1})}> \r\n                    {/* Text Input Area */}\r\n                    <Text style={styles.label}>Username</Text>\r\n                    <TextInput\r\n                    style={styles.textbox}\r\n                    placeholder=\"i.e. NameIsDev21\"\r\n                    onChangeText = {(text) => setUserEmail(text)}\r\n                    value={userEmail}\r\n                    ></TextInput>\r\n                    \r\n                    <Text style={styles.label}>Password</Text>\r\n                    <TextInput\r\n                    style={styles.textbox}\r\n                    placeholder=\"Password\"\r\n                    onChangeText = {(text) => setUserPass(text)}\r\n                    value={userPass}\r\n                    ></TextInput>\r\n                    \r\n                    <TouchableOpacity onPress={() => signUpClick()}>\r\n                        <View style={styles.buttonArea}>\r\n                            <Text style={{ color: 'white', fontSize: 20, }}>LOGIN</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                \r\n            {/* </KeyboardAvoidingView> */}\r\n        </View>\r\n    )\r\n    \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    loginContainer:{\r\n        flex: 1,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    logoView: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingVertical: 25\r\n    },\r\n    headerText: {\r\n        fontSize: 30,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    textbox: {\r\n        borderColor: 'black',\r\n        borderBottomWidth: 1,\r\n        padding: 10,\r\n        fontSize: 15,\r\n    },\r\n    label:{\r\n        marginVertical: 10,\r\n        fontSize: 20,\r\n    },\r\n    logo: {\r\n        width: 200,\r\n        height: 200,\r\n        backgroundColor: '#040',\r\n        borderRadius: 12\r\n    },\r\n    buttonArea: {\r\n        marginTop: 40,\r\n        padding: 15,\r\n        \r\n        backgroundColor: 'green',\r\n        borderRadius: 15,\r\n        \r\n        alignItems: 'center', \r\n        justifyContent: 'center',\r\n        \r\n        shadowColor: \"black\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 5,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 1,\r\n        elevation: 5,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}
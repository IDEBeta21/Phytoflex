{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Ian\\\\Documents\\\\_Project\\\\Phytoflex\\\\App.js\";\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createAppContainer } from 'react-navigation';\nimport firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC9WVlZosV9ygptBGcvY9H6MxbuI2EaGx8\",\n  authDomain: \"phytoflex-3f53f.firebaseapp.com\",\n  projectId: \"phytoflex-3f53f\",\n  storageBucket: \"phytoflex-3f53f.appspot.com\",\n  messagingSenderId: \"437461344883\",\n  appId: \"1:437461344883:web:5388696aaa0445c758c006\"\n};\n\nif (firebase.apps.length == 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    userIsSignedIn = _useState2[0],\n    setuserIsSignedIn = _useState2[1];\n\nfirebase.auth().onAuthStateChanged(function (user) {\n  if (!user) {\n    setuserIsSignedIn(false);\n  } else {\n    setuserIsSignedIn(true);\n  }\n});\nimport LoginScreen from \"./screens/landing/login\";\nimport SignUpScreen from \"./screens/landing/signup\";\nimport ForumScreen from \"./screens/forum\";\nimport { NavigationActions } from 'react-navigation';\n\nfunction forumScreen() {\n  return React.createElement(ForumScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction signUpScreen() {\n  return React.createElement(SignUpScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction loginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var gotoForum = function gotoForum() {\n    navigation.navigate('ForumScreen');\n  };\n\n  var gotoSignUp = function gotoSignUp() {\n    navigation.navigate('SignUpScreen');\n  };\n\n  return React.createElement(LoginScreen, {\n    gotoForum: gotoForum,\n    gotoSignUp: gotoSignUp,\n    firebaseConfig: firebaseConfig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  });\n}\n\nvar Stack = createNativeStackNavigator();\n\nfunction testUser(userIsSignedIn) {\n  if (!userIsSignedIn) {\n    this.props.navigation.navigate('SignUpScreen');\n  } else {\n    this.props.navigation.navigate('ForumScreen');\n  }\n}\n\nfunction App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"Phytoflex\",\n    component: loginScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Sign in\",\n    component: signUpScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Forum\",\n    component: forumScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar Screens = {\n  LoginScreen: {\n    screen: LoginScreen\n  },\n  ForumScreen: {\n    screen: ForumScreen\n  },\n  SignUpScreen: {\n    screen: SignUpScreen\n  }\n};\nvar screenStack = createStackNavigator(screen);\nexport default createAppContainer(screenStack);","map":{"version":3,"sources":["D:/Ian/Documents/_Project/Phytoflex/App.js"],"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","createStackNavigator","createAppContainer","firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","userIsSignedIn","setuserIsSignedIn","auth","onAuthStateChanged","user","LoginScreen","SignUpScreen","ForumScreen","NavigationActions","forumScreen","signUpScreen","loginScreen","navigation","gotoForum","navigate","gotoSignUp","Stack","testUser","props","App","headerShown","Screens","screen","screenStack"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Import react navigation\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\n// Import stack navigator\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\nimport { createAppContainer } from 'react-navigation';\r\n\r\n// Import firebase\r\nimport firebase from 'firebase';\r\n\r\n// firebase config\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC9WVlZosV9ygptBGcvY9H6MxbuI2EaGx8\",\r\n    authDomain: \"phytoflex-3f53f.firebaseapp.com\",\r\n    projectId: \"phytoflex-3f53f\",\r\n    storageBucket: \"phytoflex-3f53f.appspot.com\",\r\n    messagingSenderId: \"437461344883\",\r\n    appId: \"1:437461344883:web:5388696aaa0445c758c006\"\r\n};\r\nif (firebase.apps.length == 0) {\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nconst [userIsSignedIn, setuserIsSignedIn] = useState(false);\r\n\r\nfirebase.auth().onAuthStateChanged((user) => {\r\n    if (!user) {\r\n        setuserIsSignedIn(false);\r\n    } else {\r\n        setuserIsSignedIn(true);\r\n    }\r\n});\r\n\r\n// import Screens\r\nimport LoginScreen from './screens/landing/login';\r\nimport SignUpScreen from './screens/landing/signup';\r\nimport ForumScreen from './screens/forum';\r\nimport { NavigationActions } from 'react-navigation';\r\n\r\n   \r\n// Forum Screen\r\nfunction forumScreen() {\r\n    return (\r\n        <ForumScreen/>\r\n    );\r\n}\r\n\r\n// Sign Up Screens\r\nfunction signUpScreen() {\r\n    return(\r\n        <SignUpScreen/>\r\n    );\r\n}\r\n\r\n// Login Screen\r\nfunction loginScreen({navigation}){\r\n    const gotoForum = () => {\r\n        navigation.navigate('ForumScreen');\r\n    }\r\n    \r\n    const gotoSignUp = () => {\r\n        navigation.navigate('SignUpScreen');\r\n    }\r\n\r\n    return(\r\n        <LoginScreen\r\n            gotoForum={gotoForum} \r\n            gotoSignUp={gotoSignUp}\r\n            firebaseConfig={firebaseConfig}/>\r\n    );\r\n}\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction testUser(userIsSignedIn){\r\n    \r\n    if (!userIsSignedIn) {\r\n        this.props.navigation.navigate('SignUpScreen');\r\n    } else {\r\n       this.props.navigation.navigate('ForumScreen');\r\n    }\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <NavigationContainer>\r\n            <Stack.Navigator>\r\n                <Stack.Screen \r\n                    options={{headerShown: false}} \r\n                    name=\"Phytoflex\" \r\n                    component={loginScreen} />  \r\n                <Stack.Screen\r\n                    name=\"Sign in\"\r\n                    component={signUpScreen} />\r\n                <Stack.Screen \r\n                    name=\"Forum\" \r\n                    component={forumScreen} />\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n}\r\n\r\nconst Screens = {\r\n    LoginScreen:{\r\n        screen: LoginScreen\r\n    },\r\n    ForumScreen:{\r\n        screen: ForumScreen\r\n    },\r\n    SignUpScreen:{\r\n        screen: SignUpScreen\r\n    }\r\n}\r\n\r\nconst screenStack = createStackNavigator(screen);\r\nexport default createAppContainer(screenStack);\r\n        \r\n// export default App;"]},"metadata":{},"sourceType":"module"}
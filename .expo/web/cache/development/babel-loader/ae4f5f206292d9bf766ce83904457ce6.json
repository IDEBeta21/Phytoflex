{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Ian\\\\Documents\\\\_Project\\\\Phytoflex\\\\screens\\\\login.js\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { render } from 'react-dom';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Header from \"../components/header\";\nexport default function LoginScreen(_ref) {\n  var loginClick = _ref.loginClick;\n\n  var _useState = useState('adfasdf'),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState('1234'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userPass = _useState4[0],\n      setUserPass = _useState4[1];\n\n  var hello = function hello(_ref2) {\n    var userName = _ref2.userName;\n    Alert.alert('hello world: ' + {\n      userName: userName\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.loginContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    showsHorizontalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.logoView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: {\n      uri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"For Plantitos \"), React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \" and Plantitas\")), React.createElement(View, {\n    style: {\n      paddingHorizontal: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"Username\"), React.createElement(TextInput, {\n    style: styles.textbox,\n    placeholder: \"i.e. NameIsDev21\",\n    onChangeText: function onChangeText(val) {\n      return setUserName(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    style: styles.textbox,\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return loginClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.buttonArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, \"LOGIN\"))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logoView: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 25\n  },\n  headerText: {\n    fontSize: 30,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textbox: {\n    borderColor: 'black',\n    borderBottomWidth: 1,\n    padding: 10,\n    fontSize: 15\n  },\n  label: {\n    marginVertical: 10,\n    fontSize: 20\n  },\n  logo: {\n    width: 200,\n    height: 200,\n    backgroundColor: '#040',\n    borderRadius: 12\n  },\n  buttonArea: {\n    marginTop: 40,\n    padding: 15,\n    backgroundColor: 'green',\n    borderRadius: 15,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 1,\n    elevation: 5\n  }\n});","map":{"version":3,"sources":["D:/Ian/Documents/_Project/Phytoflex/screens/login.js"],"names":["React","useState","render","Header","LoginScreen","loginClick","userName","setUserName","userPass","setUserPass","hello","Alert","alert","styles","loginContainer","logoView","logo","uri","headerText","paddingHorizontal","label","textbox","val","buttonArea","color","fontSize","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","paddingVertical","borderColor","borderBottomWidth","padding","marginVertical","width","height","borderRadius","marginTop","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {useState}from 'react';\r\nimport { render } from 'react-dom';\r\nimport { \r\n    View, ScrollView, KeyboardAvoidingView, \r\n    Image, Text, TextInput, TouchableOpacity,  \r\n    StyleSheet\r\n} from 'react-native';\r\nimport Header from '../components/header';\r\n\r\nexport default function LoginScreen({loginClick}){\r\n    \r\n    const [userName, setUserName] = useState('adfasdf');\r\n    const [userPass, setUserPass] = useState('1234');\r\n    \r\n    const hello = ({userName}) => {\r\n      Alert.alert('hello world: ' + {userName});\r\n    }\r\n\r\n    return(\r\n      <View style={styles.loginContainer}>\r\n        {/* Display Header */}\r\n        <Header/>\r\n        \r\n        {/* Make the view scrollable */}\r\n        <ScrollView\r\n          showsVerticalScrollIndicator={false}\r\n          showsHorizontalScrollIndicator={false}\r\n        >\r\n          \r\n          {/* To detect virtual keyboard */}\r\n          {/* <KeyboardAvoidingView\r\n            behavior={Platform.OS === \"android\" ? \"padding\" : \"height\"}\r\n          > */}\r\n              \r\n            {/* Logo area */}\r\n            <View style={styles.logoView}>\r\n              <Image\r\n                style = {styles.logo}\r\n                source={{\r\n                  uri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png',\r\n                }}\r\n              />\r\n              <Text style={styles.headerText}>For Plantitos </Text>\r\n              <Text style={styles.headerText}> and Plantitas</Text>\r\n            </View>\r\n            \r\n            <View style={({paddingHorizontal: 30})}> \r\n              {/* Text Input Area */}\r\n              <Text style={styles.label}>Username</Text>\r\n              <TextInput\r\n                style={styles.textbox}\r\n                placeholder=\"i.e. NameIsDev21\"\r\n                onChangeText = {(val) => setUserName(val)}\r\n              ></TextInput>\r\n              \r\n              <Text style={styles.label}>Password</Text>\r\n              <TextInput\r\n                style={styles.textbox}\r\n                placeholder=\"Password\"\r\n              ></TextInput>\r\n              {/* hello */}\r\n              \r\n              <TouchableOpacity onPress={() => loginClick()}>\r\n                <View style={styles.buttonArea}>\r\n                  <Text style={{ color: 'white', fontSize: 20, }}>LOGIN</Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n            \r\n          {/* </KeyboardAvoidingView> */}\r\n        </ScrollView>\r\n      </View>\r\n    ); \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    logoView: {\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      paddingVertical: 25\r\n    },\r\n    headerText: {\r\n      fontSize: 30,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    textbox: {\r\n      borderColor: 'black',\r\n      borderBottomWidth: 1,\r\n      padding: 10,\r\n      fontSize: 15,\r\n    },\r\n    label:{\r\n      marginVertical: 10,\r\n      fontSize: 20,\r\n    },\r\n    logo: {\r\n      width: 200,\r\n      height: 200,\r\n      backgroundColor: '#040',\r\n      borderRadius: 12\r\n    },\r\n    buttonArea: {\r\n      marginTop: 40,\r\n      padding: 15,\r\n      \r\n      backgroundColor: 'green',\r\n      borderRadius: 15,\r\n      \r\n      alignItems: 'center', \r\n      justifyContent: 'center',\r\n      \r\n      shadowColor: \"black\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 5,\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 1,\r\n      elevation: 5,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\xx\\\\Desktop\\\\Phytoflex\\\\components\\\\Button\\\\PFSwitch.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport { Switch } from 'react-native-paper';\nimport Colors from \"../../utils/globalColors\";\nexport var PFSwitch = function PFSwitch(_ref) {\n  var value = _ref.value,\n      _ref$onValueChange = _ref.onValueChange,\n      _onValueChange = _ref$onValueChange === void 0 ? function () {} : _ref$onValueChange,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      color = _ref.color,\n      style = _ref.style;\n\n  return React.createElement(Switch, {\n    value: value,\n    onValueChange: function onValueChange() {\n      return _onValueChange();\n    },\n    disabled: disabled,\n    color: color ? color : Colors.primary,\n    style: _objectSpread({}, style),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/xx/Desktop/Phytoflex/components/Button/PFSwitch.js"],"names":["React","Switch","Colors","PFSwitch","value","onValueChange","disabled","color","style","primary"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,MAAP;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAwE;AAAA,MAAtEC,KAAsE,QAAtEA,KAAsE;AAAA,gCAA/DC,aAA+D;AAAA,MAA/DA,cAA+D,mCAA/C,YAAM,CAAE,CAAuC;AAAA,2BAArCC,QAAqC;AAAA,MAArCA,QAAqC,8BAA1B,KAA0B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAE9F,SACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEJ,KADT;AAEE,IAAA,aAAa,EAAE;AAAA,aAAMC,cAAa,EAAnB;AAAA,KAFjB;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,KAAK,EAAEC,KAAK,GAAIA,KAAJ,GAAYL,MAAM,CAACO,OAJjC;AAKE,IAAA,KAAK,oBAAMD,KAAN,CALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CAZM","sourcesContent":["import * as React from 'react';\r\nimport { Switch } from 'react-native-paper';\r\nimport Colors from '../../utils/globalColors';\r\n\r\nexport const PFSwitch = ({value, onValueChange = () => {}, disabled = false, color , style}) => {\r\n  \r\n  return (\r\n    <Switch \r\n      value={value} \r\n      onValueChange={() => onValueChange()} \r\n      disabled={disabled}\r\n      color={color ?  color : Colors.primary}\r\n      style={{...style}}\r\n    />\r\n  );\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}
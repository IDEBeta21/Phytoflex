{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Ian\\\\Documents\\\\_Project\\\\Phytoflex\\\\screens\\\\landing\\\\login.js\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { render } from 'react-dom';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport firebase from 'firebase';\nimport { getFocusedRouteNameFromRoute } from '@react-navigation/core';\nimport SignUpScreen from \"../../screens/landing/signup\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nvar Stack = createNativeStackNavigator();\nexport default function LoginScreen(_ref) {\n  var gotoForum = _ref.gotoForum,\n      gotoSignUp = _ref.gotoSignUp,\n      firebaseConfig = _ref.firebaseConfig;\n  var def_usrname = \"admin1\";\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userEmail = _useState2[0],\n      setuserEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userPass = _useState4[0],\n      setUserPass = _useState4[1];\n\n  var testInput = function testInput() {\n    if (userEmail == def_usrname && userPass == def_pass) {\n      gotoForum();\n    } else {\n      Alert.alert('Wrong Input/s' + userEmail);\n      setuserEmail('');\n      setUserPass('');\n    }\n  };\n\n  function logInClick() {\n    var auth = firebase.auth();\n    firebase.auth().signInWithEmailAndPassword(userEmail, userPass).then(function (result) {\n      Alert.alert(result.message);\n      console.log(result);\n    }).catch(function (error) {\n      Alert.alert(error.message);\n      console.log(error);\n    });\n  }\n\n  function toSignUp() {\n    React.createElement(SignUpScreen, {\n      gotoForum: gotoForum,\n      firebaseConfig: firebaseConfig,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    });\n  }\n\n  function main() {\n    return React.createElement(View, {\n      style: styles.loginContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.bgPic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      style: styles.logo,\n      source: {\n        uri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    })), React.createElement(View, {\n      style: styles.loginView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.headerText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Log In\"), React.createElement(Text, {\n      style: styles.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, \"YOUR EMAIL\"), React.createElement(TextInput, {\n      style: styles.textbox,\n      placeholder: \"i.e. NameIsDev21\",\n      onChangeText: function onChangeText(text) {\n        return setuserEmail(text);\n      },\n      value: userEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      style: styles.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, \"PASSWORD\"), React.createElement(TextInput, {\n      style: styles.textbox,\n      placeholder: \"Password\",\n      onChangeText: function onChangeText(text) {\n        return setUserPass(text);\n      },\n      value: userPass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return toSignUp();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: {\n        color: 'white',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }, \"Sign Up\"))), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return logInClick();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: styles.buttonArea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, \"LOGIN\")))));\n  }\n\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"Phytoflex\",\n    component: main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Sign Up\",\n    component: toSignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  loginContainer: {\n    backgroundColor: 'white',\n    justifyContent: 'space-around',\n    alignItems: 'stretch',\n    flex: 1\n  },\n  loginView: {\n    backgroundColor: '#040',\n    paddingHorizontal: 30,\n    paddingTop: 30,\n    borderTopLeftRadius: 35,\n    borderTopRightRadius: 35,\n    flex: 1\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  bgPic: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    paddingVertical: 25\n  },\n  headerText: {\n    fontSize: 30,\n    color: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 40\n  },\n  textbox: {\n    borderColor: 'black',\n    backgroundColor: 'white',\n    borderRadius: 12,\n    borderWidth: 1,\n    padding: 10,\n    fontSize: 15\n  },\n  label: {\n    color: 'white',\n    marginTop: 20,\n    fontSize: 15\n  },\n  logo: {\n    width: 200,\n    height: 200,\n    backgroundColor: 'white',\n    borderRadius: 12\n  },\n  buttonArea: {\n    marginTop: 40,\n    padding: 10,\n    backgroundColor: 'green',\n    borderRadius: 35,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 1,\n    elevation: 5\n  }\n});","map":{"version":3,"sources":["D:/Ian/Documents/_Project/Phytoflex/screens/landing/login.js"],"names":["React","useState","render","firebase","getFocusedRouteNameFromRoute","SignUpScreen","NavigationContainer","createNativeStackNavigator","Stack","LoginScreen","gotoForum","gotoSignUp","firebaseConfig","def_usrname","userEmail","setuserEmail","userPass","setUserPass","testInput","def_pass","Alert","alert","logInClick","auth","signInWithEmailAndPassword","then","result","message","console","log","catch","error","toSignUp","main","styles","loginContainer","bgPic","logo","uri","loginView","headerText","label","textbox","text","color","justifyContent","buttonArea","fontSize","headerShown","StyleSheet","create","backgroundColor","alignItems","flex","paddingHorizontal","paddingTop","borderTopLeftRadius","borderTopRightRadius","container","paddingVertical","paddingBottom","borderColor","borderRadius","borderWidth","padding","marginTop","width","height","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {useState}from 'react';\r\nimport { render } from 'react-dom';\r\nimport { \r\n    View, ScrollView, KeyboardAvoidingView, \r\n    Image, Text, TextInput, TouchableOpacity,  \r\n    StyleSheet,\r\n    Alert\r\n} from 'react-native';\r\n\r\nimport firebase from 'firebase';\r\nimport { getFocusedRouteNameFromRoute } from '@react-navigation/core';\r\n\r\nimport SignUpScreen from '../../screens/landing/signup';\r\n\r\n// Import react navigation\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function LoginScreen({gotoForum, gotoSignUp, firebaseConfig}){\r\n    \r\n    const def_usrname = \"admin1\"\r\n\r\n    const [userEmail, setuserEmail] = useState('');\r\n    const [userPass, setUserPass] = useState('');\r\n\r\n    const testInput = () => {\r\n        if(userEmail == def_usrname && userPass == def_pass){\r\n            gotoForum();\r\n        }else{\r\n            Alert.alert('Wrong Input/s' + userEmail);\r\n            setuserEmail('');\r\n            setUserPass('');\r\n        }\r\n    }\r\n\r\n    function logInClick() {\r\n        const auth = firebase.auth();\r\n        firebase.auth().signInWithEmailAndPassword(userEmail, userPass)\r\n            .then((result) => {\r\n                Alert.alert(result.message);\r\n                console.log(result);\r\n            })\r\n            .catch((error) => {\r\n                Alert.alert(error.message);\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    function toSignUp() {\r\n        <SignUpScreen\r\n            gotoForum={gotoForum} \r\n            firebaseConfig={firebaseConfig}/>\r\n    }\r\n\r\n    function main() {\r\n        return(\r\n            <View style={styles.loginContainer}>\r\n                {/* Display Header */}\r\n                \r\n                {/* Make the view scrollable */}\r\n                {/* To detect virtual keyboard */}\r\n                {/* <KeyboardAvoidingView\r\n                behavior={Platform.OS === \"android\" ? \"padding\" : \"height\"}\r\n                > */}\r\n                    \r\n                    {/* Logo area */}\r\n                    <View style={styles.bgPic}>\r\n                        <Image\r\n                            style = {styles.logo}\r\n                            source={{\r\n                                uri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png',\r\n                            }}\r\n                        />\r\n                    </View>\r\n                    \r\n                    <View style={(styles.loginView)}> \r\n                        {/* Text Input Area */}\r\n                        <Text style={styles.headerText}>Log In</Text>\r\n\r\n                        <Text style={styles.label}>YOUR EMAIL</Text>\r\n                        <TextInput\r\n                        style={styles.textbox}\r\n                        placeholder=\"i.e. NameIsDev21\"\r\n                        onChangeText = {(text) => setuserEmail(text)}\r\n                        value={userEmail}\r\n                        ></TextInput>\r\n                        \r\n                        <Text style={styles.label}>PASSWORD</Text>\r\n                        <TextInput\r\n                        style={styles.textbox}\r\n                        placeholder=\"Password\"\r\n                        onChangeText = {(text) => setUserPass(text)}\r\n                        value={userPass}\r\n                        ></TextInput>\r\n\r\n                        <TouchableOpacity onPress={() => toSignUp()}>\r\n                            <View style={{color: 'white', justifyContent: 'center'}}>\r\n                                <Text style={{color: 'white'}}>Sign Up</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                        \r\n                        <TouchableOpacity onPress={() => logInClick()}>\r\n                            <View style={styles.buttonArea}>\r\n                                <Text style={{ color: 'white', fontSize: 20, }}>LOGIN</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    \r\n                {/* </KeyboardAvoidingView> */}\r\n            </View>\r\n        ); \r\n    }\r\n\r\n    return (\r\n        <Stack.Navigator>\r\n            <Stack.Screen \r\n                options={{headerShown: false}} \r\n                name=\"Phytoflex\" \r\n                component={main} />  \r\n            <Stack.Screen \r\n                    name=\"Sign Up\" \r\n                    component={toSignUp} />\r\n        </Stack.Navigator>\r\n    );\r\n}\r\n    \r\nconst styles = StyleSheet.create({\r\n    loginContainer:{\r\n        backgroundColor: 'white',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'stretch',\r\n        flex: 1\r\n    },\r\n    loginView: {\r\n        backgroundColor: '#040',\r\n        paddingHorizontal: 30, \r\n        paddingTop: 30, \r\n        borderTopLeftRadius: 35, \r\n        borderTopRightRadius: 35,\r\n        flex: 1\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    bgPic: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'white',\r\n        paddingVertical: 25,\r\n    },\r\n    headerText: {\r\n        fontSize: 30,\r\n        color: 'white',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingBottom: 40\r\n    },\r\n    textbox: {\r\n        borderColor: 'black',\r\n        backgroundColor: 'white',\r\n        borderRadius: 12,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n        fontSize: 15,\r\n    },\r\n    label:{\r\n        color: 'white',\r\n        marginTop: 20,\r\n        fontSize: 15,\r\n    },\r\n    logo: {\r\n        width: 200,\r\n        height: 200,\r\n        backgroundColor: 'white',\r\n        borderRadius: 12\r\n    },\r\n    buttonArea: {\r\n        marginTop: 40,\r\n        padding: 10,\r\n        \r\n        backgroundColor: 'green',\r\n        borderRadius: 35,\r\n        \r\n        alignItems: 'center', \r\n        justifyContent: 'center',\r\n        \r\n        shadowColor: \"black\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 5,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 1,\r\n        elevation: 5,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}
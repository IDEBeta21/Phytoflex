{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Ian\\\\Documents\\\\_Project\\\\Phytoflex\\\\node_modules\\\\react-native-gesture-handler\\\\GestureHandlerButton.web.js\";\nvar _excluded = [\"children\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar RNGestureHandlerButton = function (_React$Component) {\n  _inherits(RNGestureHandlerButton, _React$Component);\n\n  var _super = _createSuper(RNGestureHandlerButton);\n\n  function RNGestureHandlerButton() {\n    _classCallCheck(this, RNGestureHandlerButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RNGestureHandlerButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      return React.createElement(TouchableWithoutFeedback, _extends({\n        accessibilityRole: \"button\"\n      }, rest, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }\n      }, children));\n    }\n  }]);\n\n  return RNGestureHandlerButton;\n}(React.Component);\n\nexport { RNGestureHandlerButton as default };","map":{"version":3,"sources":["D:/Ian/Documents/_Project/Phytoflex/node_modules/react-native-gesture-handler/GestureHandlerButton.web.js"],"names":["React","RNGestureHandlerButton","props","children","rest","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;IAGqBC,sB;;;;;;;;;;;;;WACnB,kBAAS;AACP,wBAA8B,KAAKC,KAAnC;AAAA,UAAQC,QAAR,eAAQA,QAAR;AAAA,UAAqBC,IAArB;;AAEA,aACE,oBAAC,wBAAD;AAA0B,QAAA,iBAAiB,EAAC;AAA5C,SAAyDA,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOD,QAAP,CADF,CADF;AAKD;;;;EATiDH,KAAK,CAACK,S;;SAArCJ,sB","sourcesContent":["import React from 'react';\nimport { TouchableWithoutFeedback, View } from 'react-native';\n\nexport default class RNGestureHandlerButton extends React.Component {\n  render() {\n    const { children, ...rest } = this.props;\n\n    return (\n      <TouchableWithoutFeedback accessibilityRole=\"button\" {...rest}>\n        <View>{children}</View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
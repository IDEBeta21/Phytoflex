{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\xx\\\\Desktop\\\\Phytoflex\\\\screens\\\\landing\\\\OnboardingScreen.js\";\n\nimport React from 'react';\nimport { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar COLORS = {\n  primary: '#1D4123',\n  white: '#ffffff'\n};\nvar slides = [{\n  id: '1',\n  image: require(\"../../assets/onboarding/Welcome.png\"),\n  title: 'Welcome!',\n  subtitle: 'Phytoflex is just for you! Get yourself and your plants ready now!'\n}, {\n  id: '2',\n  image: require(\"../../assets/onboarding/Flex.png\"),\n  title: 'Flex your Plants',\n  subtitle: 'Snap and Flex your plants now! You can post and flex your plants on your account'\n}, {\n  id: '3',\n  image: require(\"../../assets/onboarding/Discuss.png\"),\n  title: 'Discuss Plants',\n  subtitle: 'Get ready to discuss and share answer to questions about plants through our community'\n}, {\n  id: '4',\n  image: require(\"../../assets/onboarding/Identify.png\"),\n  title: 'Identify Plants',\n  subtitle: 'Have a little knowledge about plants? Snap a photo and letâ€™s identify your plants through your camera'\n}, {\n  id: '5',\n  image: require(\"../../assets/onboarding/Shop.png\"),\n  title: 'Shop Plants',\n  subtitle: 'Looking for more plants for your garden? Start shopping and add them onto your collection'\n}];\n\nvar Slide = function Slide(_ref) {\n  var item = _ref.item;\n  return React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: item.image,\n    style: {\n      height: '75%',\n      width: width,\n      resizeMode: 'contain'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, item.title), React.createElement(Text, {\n    style: styles.subtitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, item.subtitle));\n};\n\nvar OnboardingScreen = function OnboardingScreen(_ref2) {\n  var navigation = _ref2.navigation;\n\n  function gotoHome() {\n    toTabs();\n  }\n\n  var toTabs = function toTabs() {\n    navigation.push('MyTabs');\n  };\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentSlideIndex = _useState2[0],\n      setCurrentSlideIndex = _useState2[1];\n\n  var ref = React.useRef(null);\n\n  var Footer = function Footer() {\n    return React.createElement(View, {\n      style: {\n        height: height * 0.25,\n        justifyContent: 'space-between',\n        paddingHorizontal: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        marginTop: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, slides.map(function (_, index) {\n      return React.createElement(View, {\n        key: index,\n        style: [styles.indicator, currentSlideIndex == index && {\n          backgroundColor: COLORS.white,\n          width: 25\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      });\n    })), React.createElement(View, {\n      style: {\n        marginBottom: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, currentSlideIndex == slides.length - 1 ? React.createElement(View, {\n      style: {\n        height: 50\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: [styles.btn],\n      onPress: function onPress() {\n        return gotoHome();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'poppins-semiBold',\n        fontSize: 15,\n        color: COLORS.primary\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    }, \"Get Started\"))) : React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: [styles.btn, {\n        backgroundColor: 'transparent',\n        borderWidth: 1,\n        borderColor: COLORS.white\n      }],\n      onPress: skip,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'poppins-regular',\n        fontSize: 15,\n        color: COLORS.white\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }\n    }, \"Skip\")), React.createElement(View, {\n      style: {\n        width: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: [styles.btn],\n      onPress: goNextSlide,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontFamily: 'poppins-semiBold',\n        fontSize: 15,\n        color: COLORS.primary\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    }, \"Next\")))));\n  };\n\n  var updateCurrentSlideIndex = function updateCurrentSlideIndex(e) {\n    var contentOffsetX = e.nativeEvent.contentOffset.x;\n    var currentIndex = Math.round(contentOffsetX / width);\n    setCurrentSlideIndex(currentIndex);\n  };\n\n  var goNextSlide = function goNextSlide() {\n    var nextSlideIndex = currentSlideIndex + 1;\n\n    if (nextSlideIndex != slides.length) {\n      var _ref$current;\n\n      var offset = nextSlideIndex * width;\n      ref == null ? void 0 : (_ref$current = ref.current) == null ? void 0 : _ref$current.scrollToOffset({\n        offset: offset\n      });\n      setCurrentSlideIndex(nextSlideIndex);\n    }\n  };\n\n  var skip = function skip() {\n    var _ref$current2;\n\n    var lastSlideIndex = slides.length - 1;\n    var offset = lastSlideIndex * width;\n    ref == null ? void 0 : (_ref$current2 = ref.current) == null ? void 0 : _ref$current2.scrollToOffset({\n      offset: offset\n    });\n    setCurrentSlideIndex(lastSlideIndex);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.primary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: COLORS.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }), React.createElement(FlatList, {\n    ref: ref,\n    onMomentumScrollEnd: updateCurrentSlideIndex,\n    pagingEnabled: true,\n    data: slides,\n    contentContainerStyle: {\n      height: height * 0.75\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(Slide, {\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 45\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }), React.createElement(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  title: {\n    color: COLORS.white,\n    fontSize: 22,\n    fontFamily: 'poppins-semiBold',\n    marginTop: 20,\n    textAlign: 'center'\n  },\n  subtitle: {\n    color: COLORS.white,\n    fontFamily: 'poppins-regular',\n    fontSize: 13,\n    marginTop: 10,\n    maxWidth: '70%',\n    textAlign: 'center',\n    lineHeight: 23\n  },\n  indicator: {\n    height: 2.5,\n    width: 10,\n    backgroundColor: 'grey',\n    marginHorizontal: 3,\n    borderRadius: 2\n  },\n  btn: {\n    flex: 1,\n    height: 50,\n    borderRadius: 5,\n    backgroundColor: COLORS.white,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default OnboardingScreen;","map":{"version":3,"sources":["C:/Users/xx/Desktop/Phytoflex/screens/landing/OnboardingScreen.js"],"names":["React","useState","Dimensions","get","width","height","COLORS","primary","white","slides","id","image","require","title","subtitle","Slide","item","alignItems","resizeMode","styles","OnboardingScreen","navigation","gotoHome","toTabs","push","currentSlideIndex","setCurrentSlideIndex","ref","useRef","Footer","justifyContent","paddingHorizontal","flexDirection","marginTop","map","_","index","indicator","backgroundColor","marginBottom","length","btn","fontFamily","fontSize","color","borderWidth","borderColor","skip","goNextSlide","updateCurrentSlideIndex","e","contentOffsetX","nativeEvent","contentOffset","x","currentIndex","Math","round","nextSlideIndex","offset","current","scrollToOffset","lastSlideIndex","flex","StyleSheet","create","textAlign","maxWidth","lineHeight","marginHorizontal","borderRadius"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;;;;;;;;AAaA,sBAAwBC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAxB;AAAA,IAAOC,KAAP,mBAAOA,KAAP;AAAA,IAAcC,MAAd,mBAAcA,MAAd;;AAEA,IAAMC,MAAM,GAAG;AAAEC,EAAAA,OAAO,EAAE,SAAX;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CAAf;AAEA,IAAMC,MAAM,GAAG,CACX;AACIC,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,KAAK,EAAEC,OAAO,uCAFlB;AAGIC,EAAAA,KAAK,EAAE,UAHX;AAIIC,EAAAA,QAAQ,EAAE;AAJd,CADW,EAOP;AACAJ,EAAAA,EAAE,EAAE,GADJ;AAEAC,EAAAA,KAAK,EAAEC,OAAO,oCAFd;AAGAC,EAAAA,KAAK,EAAE,kBAHP;AAIAC,EAAAA,QAAQ,EAAE;AAJV,CAPO,EAaP;AACAJ,EAAAA,EAAE,EAAE,GADJ;AAEAC,EAAAA,KAAK,EAAEC,OAAO,uCAFd;AAGAC,EAAAA,KAAK,EAAE,gBAHP;AAIAC,EAAAA,QAAQ,EAAE;AAJV,CAbO,EAmBP;AACAJ,EAAAA,EAAE,EAAE,GADJ;AAEAC,EAAAA,KAAK,EAAEC,OAAO,wCAFd;AAGAC,EAAAA,KAAK,EAAE,iBAHP;AAIAC,EAAAA,QAAQ,EAAE;AAJV,CAnBO,EAyBP;AACAJ,EAAAA,EAAE,EAAE,GADJ;AAEAC,EAAAA,KAAK,EAAEC,OAAO,oCAFd;AAGAC,EAAAA,KAAK,EAAE,aAHP;AAIAC,EAAAA,QAAQ,EAAE;AAJV,CAzBO,CAAf;;AAiCA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAY;AAAA,MAAVC,IAAU,QAAVA,IAAU;AACtB,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAGD,IAAI,CAACL,KADlB;AAEI,IAAA,KAAK,EAAE;AAACN,MAAAA,MAAM,EAAE,KAAT;AAAgBD,MAAAA,KAAK,EAALA,KAAhB;AAAuBc,MAAAA,UAAU,EAAE;AAAnC,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACN,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BG,IAAI,CAACH,KAAjC,CALJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACL,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BE,IAAI,CAACF,QAApC,CANJ,CADJ;AAUH,CAXD;;AAaA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,QAAkB;AAAA,MAAhBC,UAAgB,SAAhBA,UAAgB;;AAEvC,WAASC,QAAT,GAAoB;AAChBC,IAAAA,MAAM;AACT;;AAED,MAAMA,MAAM,GAAG,SAATA,MAAS,GAAM;AACjBF,IAAAA,UAAU,CAACG,IAAX,CAAgB,QAAhB;AACH,GAFD;;AAIA,kBAAkDvB,QAAQ,CAAC,CAAD,CAA1D;AAAA;AAAA,MAAOwB,iBAAP;AAAA,MAA0BC,oBAA1B;;AACA,MAAMC,GAAG,GAAG3B,KAAK,CAAC4B,MAAN,CAAa,IAAb,CAAZ;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,WACI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAE;AACHxB,QAAAA,MAAM,EAAEA,MAAM,GAAG,IADd;AAEHyB,QAAAA,cAAc,EAAE,eAFb;AAGHC,QAAAA,iBAAiB,EAAE;AAHhB,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,aAAa,EAAE,KADZ;AAEHF,QAAAA,cAAc,EAAE,QAFb;AAGHG,QAAAA,SAAS,EAAE;AAHR,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMKxB,MAAM,CAACyB,GAAP,CAAW,UAACC,CAAD,EAAIC,KAAJ;AAAA,aACR,oBAAC,IAAD;AACI,QAAA,GAAG,EAAEA,KADT;AAEI,QAAA,KAAK,EAAE,CACHjB,MAAM,CAACkB,SADJ,EAEHZ,iBAAiB,IAAIW,KAArB,IAA8B;AAC1BE,UAAAA,eAAe,EAAEhC,MAAM,CAACE,KADE;AAE1BJ,UAAAA,KAAK,EAAE;AAFmB,SAF3B,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ;AAAA,KAAX,CANL,CANJ,EAyBQ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACmC,QAAAA,YAAY,EAAC;AAAd,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMd,iBAAiB,IAAIhB,MAAM,CAAC+B,MAAP,GAAe,CAApC,GACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACnC,QAAAA,MAAM,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD;AACI,MAAA,KAAK,EAAE,CAACc,MAAM,CAACsB,GAAR,CADX;AACyB,MAAA,OAAO,EAAE;AAAA,eAAMnB,QAAQ,EAAd;AAAA,OADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAE;AAACoB,QAAAA,UAAU,EAAE,kBAAb;AAAiCC,QAAAA,QAAQ,EAAE,EAA3C;AAA+CC,QAAAA,KAAK,EAAEtC,MAAM,CAACC;AAA7D,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CADJ,CADF,GAWE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACyB,QAAAA,aAAa,EAAC;AAAf,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD;AACI,MAAA,KAAK,EAAE,CAACb,MAAM,CAACsB,GAAR,EAAa;AAACH,QAAAA,eAAe,EAAE,aAAlB;AAAiCO,QAAAA,WAAW,EAAE,CAA9C;AAAiDC,QAAAA,WAAW,EAAExC,MAAM,CAACE;AAArE,OAAb,CADX;AAEI,MAAA,OAAO,EAAEuC,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAE;AAACL,QAAAA,UAAU,EAAE,iBAAb;AAAgCC,QAAAA,QAAQ,EAAE,EAA1C;AAA8CC,QAAAA,KAAK,EAAEtC,MAAM,CAACE;AAA5D,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ,EASA,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACJ,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,EAUI,oBAAC,gBAAD;AACI,MAAA,KAAK,EAAE,CAACe,MAAM,CAACsB,GAAR,CADX;AAEI,MAAA,OAAO,EAAEO,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAE;AAACN,QAAAA,UAAU,EAAE,kBAAb;AAAiCC,QAAAA,QAAQ,EAAE,EAA3C;AAA+CC,QAAAA,KAAK,EAAEtC,MAAM,CAACC;AAA7D,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CAVJ,CAZR,CAzBR,CADJ;AA8DH,GA/DD;;AAiEA,MAAM0C,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,CAAD,EAAO;AACvC,QAAMC,cAAc,GAAGD,CAAC,CAACE,WAAF,CAAcC,aAAd,CAA4BC,CAAnD;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWN,cAAc,GAAG/C,KAA5B,CAArB;AACAsB,IAAAA,oBAAoB,CAAC6B,YAAD,CAApB;AACC,GAJD;;AAMA,MAAMP,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAMU,cAAc,GAAGjC,iBAAiB,GAAE,CAA1C;;AACA,QAAIiC,cAAc,IAAIjD,MAAM,CAAC+B,MAA7B,EAAqC;AAAA;;AACjC,UAAMmB,MAAM,GAAGD,cAAc,GAAGtD,KAAhC;AACAuB,MAAAA,GAAG,QAAH,4BAAAA,GAAG,CAAEiC,OAAL,kCAAcC,cAAd,CAA6B;AAACF,QAAAA,MAAM,EAANA;AAAD,OAA7B;AACAjC,MAAAA,oBAAoB,CAACgC,cAAD,CAApB;AACH;AACJ,GAPD;;AASA,MAAMX,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACf,QAAMe,cAAc,GAAGrD,MAAM,CAAC+B,MAAP,GAAe,CAAtC;AACA,QAAMmB,MAAM,GAAGG,cAAc,GAAG1D,KAAhC;AACAuB,IAAAA,GAAG,QAAH,6BAAAA,GAAG,CAAEiC,OAAL,mCAAcC,cAAd,CAA6B;AAACF,MAAAA,MAAM,EAANA;AAAD,KAA7B;AACAjC,IAAAA,oBAAoB,CAACoC,cAAD,CAApB;AACH,GALD;;AAOA,SACI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAC,CAAN;AAASzB,MAAAA,eAAe,EAAChC,MAAM,CAACC;AAAhC,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAED,MAAM,CAACC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,EAGQ,oBAAC,QAAD;AACI,IAAA,GAAG,EAAIoB,GADX;AAEI,IAAA,mBAAmB,EAAEsB,uBAFzB;AAGI,IAAA,aAAa,MAHjB;AAII,IAAA,IAAI,EAAExC,MAJV;AAKI,IAAA,qBAAqB,EAAG;AAACJ,MAAAA,MAAM,EAAEA,MAAM,GAAG;AAAlB,KAL5B;AAMI,IAAA,UAAU,MANd;AAOI,IAAA,8BAA8B,EAAE,KAPpC;AAQI,IAAA,UAAU,EAAE;AAAA,UAAEW,IAAF,SAAEA,IAAF;AAAA,aAAY,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;AAAA,KARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,EAaQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbR,CADJ;AAiBH,CApHD;;AAsHA,IAAMG,MAAM,GAAG6C,UAAU,CAACC,MAAX,CAAkB;AAC7BpD,EAAAA,KAAK,EAAE;AACJ+B,IAAAA,KAAK,EAAEtC,MAAM,CAACE,KADV;AAEJmC,IAAAA,QAAQ,EAAE,EAFN;AAGJD,IAAAA,UAAU,EAAE,kBAHR;AAIJT,IAAAA,SAAS,EAAE,EAJP;AAKJiC,IAAAA,SAAS,EAAE;AALP,GADsB;AAQ7BpD,EAAAA,QAAQ,EAAE;AACP8B,IAAAA,KAAK,EAAEtC,MAAM,CAACE,KADP;AAEPkC,IAAAA,UAAU,EAAE,iBAFL;AAGPC,IAAAA,QAAQ,EAAE,EAHH;AAIPV,IAAAA,SAAS,EAAE,EAJJ;AAKPkC,IAAAA,QAAQ,EAAE,KALH;AAMPD,IAAAA,SAAS,EAAE,QANJ;AAOPE,IAAAA,UAAU,EAAE;AAPL,GARmB;AAiB7B/B,EAAAA,SAAS,EAAE;AACPhC,IAAAA,MAAM,EAAE,GADD;AAEPD,IAAAA,KAAK,EAAE,EAFA;AAGPkC,IAAAA,eAAe,EAAE,MAHV;AAIP+B,IAAAA,gBAAgB,EAAE,CAJX;AAKPC,IAAAA,YAAY,EAAE;AALP,GAjBkB;AAwB7B7B,EAAAA,GAAG,EAAE;AACDsB,IAAAA,IAAI,EAAE,CADL;AAED1D,IAAAA,MAAM,EAAE,EAFP;AAGDiE,IAAAA,YAAY,EAAE,CAHb;AAIDhC,IAAAA,eAAe,EAAEhC,MAAM,CAACE,KAJvB;AAKDsB,IAAAA,cAAc,EAAE,QALf;AAMDb,IAAAA,UAAU,EAAE;AANX;AAxBwB,CAAlB,CAAf;AAkCA,eAAeG,gBAAf","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { \r\n    SafeAreaView, \r\n    Dimensions, \r\n    StyleSheet, \r\n    FlatList,\r\n    StatusBar, \r\n    View,\r\n    Image,\r\n    Text, \r\n    TouchableOpacity\r\n} from 'react-native';\r\n\r\nconst {width, height} = Dimensions.get('window');\r\n\r\nconst COLORS = { primary: '#1D4123', white: '#ffffff'};\r\n\r\nconst slides = [\r\n    {\r\n        id: '1',\r\n        image: require('../../assets/onboarding/Welcome.png'),\r\n        title: 'Welcome!',\r\n        subtitle: 'Phytoflex is just for you! Get yourself and your plants ready now!'\r\n    },\r\n        {\r\n        id: '2',\r\n        image: require('../../assets/onboarding/Flex.png'),\r\n        title: 'Flex your Plants',\r\n        subtitle: 'Snap and Flex your plants now! You can post and flex your plants on your account'\r\n    },\r\n        {\r\n        id: '3',\r\n        image: require('../../assets/onboarding/Discuss.png'),\r\n        title: 'Discuss Plants',\r\n        subtitle: 'Get ready to discuss and share answer to questions about plants through our community'\r\n    },\r\n        {\r\n        id: '4',\r\n        image: require('../../assets/onboarding/Identify.png'),\r\n        title: 'Identify Plants',\r\n        subtitle: 'Have a little knowledge about plants? Snap a photo and letâ€™s identify your plants through your camera'\r\n    },\r\n        {\r\n        id: '5',\r\n        image: require('../../assets/onboarding/Shop.png'),\r\n        title: 'Shop Plants',\r\n        subtitle: 'Looking for more plants for your garden? Start shopping and add them onto your collection'\r\n    }\r\n];\r\n\r\nconst Slide = ({item}) => {\r\n    return (\r\n        <View style={{alignItems: 'center'}}>\r\n            <Image \r\n                source= {item.image} \r\n                style={{height: '75%', width, resizeMode: 'contain'}} \r\n            />\r\n            <Text style={styles.title}>{item.title}</Text>\r\n            <Text style={styles.subtitle}>{item.subtitle}</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst OnboardingScreen = ({navigation}) => {\r\n\r\n    function gotoHome() {\r\n        toTabs();\r\n    }\r\n\r\n    const toTabs = () => {\r\n        navigation.push('MyTabs');\r\n    }\r\n\r\n    const [currentSlideIndex, setCurrentSlideIndex] = useState(0);\r\n    const ref = React.useRef(null);\r\n    const Footer = () => {\r\n        return (\r\n            <View\r\n                style={{\r\n                    height: height * 0.25,\r\n                    justifyContent: 'space-between',\r\n                    paddingHorizontal: 20,\r\n                }}>\r\n                <View \r\n                    style={{\r\n                        flexDirection: 'row', \r\n                        justifyContent: 'center', \r\n                        marginTop: 20\r\n                    }}>\r\n                    {slides.map((_, index) => (\r\n                        <View \r\n                            key={index} \r\n                            style={[\r\n                                styles.indicator, \r\n                                currentSlideIndex == index && {\r\n                                    backgroundColor: COLORS.white,\r\n                                    width: 25,\r\n                                },\r\n                            ]}\r\n                        />\r\n                    ))}\r\n                    </View>    \r\n                    <View style={{marginBottom:20}}>\r\n                        { currentSlideIndex == slides.length -1 ? ( \r\n                            <View style={{height: 50}}>\r\n                                <TouchableOpacity \r\n                                    style={[styles.btn]} onPress={() => gotoHome()}>\r\n                                    <Text \r\n                                        style={{fontFamily: 'poppins-semiBold', fontSize: 15, color: COLORS.primary}}>\r\n                                        Get Started\r\n                                    </Text>\r\n                                </TouchableOpacity>\r\n                            </View> \r\n                            ) : ( \r\n                            <View style={{flexDirection:'row'}}>\r\n                                <TouchableOpacity \r\n                                    style={[styles.btn, {backgroundColor: 'transparent', borderWidth: 1, borderColor: COLORS.white}]} \r\n                                    onPress={skip}>\r\n                                    <Text \r\n                                        style={{fontFamily: 'poppins-regular', fontSize: 15, color: COLORS.white}}>\r\n                                        Skip\r\n                                    </Text>\r\n                                </TouchableOpacity>\r\n                            <View style={{width: 16}}/>\r\n                                <TouchableOpacity \r\n                                    style={[styles.btn]} \r\n                                    onPress={goNextSlide}>\r\n                                    <Text \r\n                                        style={{fontFamily: 'poppins-semiBold', fontSize: 15, color: COLORS.primary}}>\r\n                                        Next\r\n                                    </Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                            )  }\r\n\r\n                    </View>\r\n            </View>\r\n        );\r\n    };\r\n\r\n    const updateCurrentSlideIndex = (e) => {\r\n    const contentOffsetX = e.nativeEvent.contentOffset.x;\r\n    const currentIndex = Math.round(contentOffsetX / width);\r\n    setCurrentSlideIndex(currentIndex);\r\n    };\r\n\r\n    const goNextSlide = () => {\r\n        const nextSlideIndex = currentSlideIndex +1;\r\n        if (nextSlideIndex != slides.length) {\r\n            const offset = nextSlideIndex * width;\r\n            ref?.current?.scrollToOffset({offset});\r\n            setCurrentSlideIndex(nextSlideIndex);\r\n        }\r\n    };\r\n\r\n    const skip = () => {\r\n        const lastSlideIndex = slides.length -1;\r\n        const offset = lastSlideIndex * width;\r\n        ref?.current?.scrollToOffset({offset});\r\n        setCurrentSlideIndex(lastSlideIndex);\r\n    };\r\n\r\n    return ( \r\n        <SafeAreaView\r\n            style={{flex:1, backgroundColor:COLORS.primary}}>\r\n                <StatusBar backgroundColor={COLORS.primary}/>\r\n                <FlatList\r\n                    ref = {ref}\r\n                    onMomentumScrollEnd={updateCurrentSlideIndex}\r\n                    pagingEnabled\r\n                    data={slides}\r\n                    contentContainerStyle= {{height: height * 0.75}}\r\n                    horizontal\r\n                    showsHorizontalScrollIndicator={false}\r\n                    renderItem={({item}) => <Slide item={item} />}\r\n                />\r\n                <Footer />\r\n            </SafeAreaView> \r\n        );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    title: {\r\n       color: COLORS.white,\r\n       fontSize: 22,\r\n       fontFamily: 'poppins-semiBold',\r\n       marginTop: 20,\r\n       textAlign: 'center'\r\n    },\r\n    subtitle: {\r\n       color: COLORS.white,\r\n       fontFamily: 'poppins-regular',\r\n       fontSize: 13,\r\n       marginTop: 10,\r\n       maxWidth: '70%',\r\n       textAlign: 'center',\r\n       lineHeight: 23,\r\n    },\r\n    indicator: {\r\n        height: 2.5,\r\n        width: 10,\r\n        backgroundColor: 'grey',\r\n        marginHorizontal: 3,\r\n        borderRadius: 2\r\n    },\r\n    btn: {\r\n        flex: 1,\r\n        height: 50,\r\n        borderRadius: 5,\r\n        backgroundColor: COLORS.white,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n});\r\n\r\nexport default OnboardingScreen;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\Phytoflex\\\\App.js\";\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { createStackNavigator, Header } from 'react-navigation-stack';\nimport { createAppContainer } from 'react-navigation';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC9WVlZosV9ygptBGcvY9H6MxbuI2EaGx8\",\n  authDomain: \"phytoflex-3f53f.firebaseapp.com\",\n  projectId: \"phytoflex-3f53f\",\n  storageBucket: \"phytoflex-3f53f.appspot.com\",\n  messagingSenderId: \"437461344883\",\n  appId: \"1:437461344883:web:5388696aaa0445c758c006\"\n};\n\nif (firebase.apps.length == 0) {\n  var firebaseApp = firebase.initializeApp(firebaseConfig);\n}\n\nimport LoginScreen from \"./screens/landing/login\";\nimport SignUpScreen from \"./screens/landing/signup\";\nimport ForumScreen from \"./screens/forum\";\nimport PlantCare from \"./screens/plantcare/mainPlantCare\";\nimport MyTabs from \"./screens/global/bottomNav\";\nimport HeaderContent from \"./screens/global/Header\";\nimport { AppLoading } from 'expo';\nimport * as Font from 'expo-font';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    'poppins-regular': require(\"./assets/fonts/Poppins-Regular.ttf\"),\n    'poppins-semiBold': require(\"./assets/fonts/Poppins-SemiBold.ttf\"),\n    'poppins-light': require(\"./assets/fonts/Poppins-Light.ttf\")\n  });\n};\n\nfunction funcLoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(LoginScreen, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction funcSignupScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(SignUpScreen, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction funcBottomNav(_ref3) {\n  var navigation = _ref3.navigation;\n  return React.createElement(MyTabs, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  });\n}\n\nvar AuthStack = createNativeStackNavigator();\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { DrawerContent } from \"./screens/global/Drawer\";\nvar Drawer = createDrawerNavigator();\n\nfunction SideBar() {\n  var _this = this;\n\n  return React.createElement(Drawer.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      drawerActiveTintColor: 'white',\n      drawerStyle: {\n        backgroundColor: '#1D4123',\n        width: 280,\n        paddingEnd: 16\n      }\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerContent, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Post\",\n    component: funcBottomNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Login\",\n    component: funcLoginScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  if (fontsLoaded) {\n    return React.createElement(NavigationContainer, {\n      independent: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, React.createElement(AuthStack.Navigator, {\n      initialRouteName: firebase.auth().onAuthStateChanged(function (user) {\n        return user;\n      }) ? \"Login\" : \"SignUpScreen\",\n      screenOptions: {\n        headerShown: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, React.createElement(AuthStack.Screen, {\n      name: \"Login\",\n      component: funcLoginScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }), React.createElement(AuthStack.Screen, {\n      name: \"SignUpScreen\",\n      component: funcSignupScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }), React.createElement(AuthStack.Screen, {\n      name: \"MyTabs\",\n      component: SideBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    getFonts();\n    setFontsLoaded(true);\n    console.log(\"Font is good\");\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Admin/Documents/GitHub/Phytoflex/App.js"],"names":["React","useState","useEffect","createStackNavigator","Header","createAppContainer","NavigationContainer","createNativeStackNavigator","firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","firebaseApp","initializeApp","LoginScreen","SignUpScreen","ForumScreen","PlantCare","MyTabs","HeaderContent","AppLoading","Font","getFonts","loadAsync","require","funcLoginScreen","navigation","funcSignupScreen","funcBottomNav","AuthStack","createDrawerNavigator","DrawerContent","Drawer","SideBar","headerShown","drawerActiveTintColor","drawerStyle","backgroundColor","width","paddingEnd","props","App","fontsLoaded","setFontsLoaded","auth","onAuthStateChanged","user","console","log"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Import stack navigator\r\nimport { createStackNavigator, Header } from 'react-navigation-stack';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\n// Import firebase\r\nimport firebase from 'firebase';\r\n\r\n// firebase config\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC9WVlZosV9ygptBGcvY9H6MxbuI2EaGx8\",\r\n    authDomain: \"phytoflex-3f53f.firebaseapp.com\",\r\n    projectId: \"phytoflex-3f53f\",\r\n    storageBucket: \"phytoflex-3f53f.appspot.com\",\r\n    messagingSenderId: \"437461344883\",\r\n    appId: \"1:437461344883:web:5388696aaa0445c758c006\"\r\n};\r\nif (firebase.apps.length == 0) {\r\n    const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\n// import Screens\r\nimport LoginScreen from './screens/landing/login';\r\nimport SignUpScreen from './screens/landing/signup';\r\nimport ForumScreen from './screens/forum';\r\nimport PlantCare from './screens/plantcare/mainPlantCare';\r\nimport MyTabs from './screens/global/bottomNav';\r\nimport HeaderContent from './screens/global/Header';\r\n\r\n// \r\n// import { AppLoading } from 'expo';\\\r\nimport { AppLoading } from 'expo';\r\nimport * as Font from 'expo-font';\r\nimport { View } from 'react-native-web';\r\nimport { Text } from 'react-native';\r\n\r\nconst getFonts = () => Font.loadAsync({\r\n  'poppins-regular': require('./assets/fonts/Poppins-Regular.ttf'),\r\n  'poppins-semiBold': require('./assets/fonts/Poppins-SemiBold.ttf'),\r\n  'poppins-light': require('./assets/fonts/Poppins-Light.ttf')\r\n})\r\n\r\n// Navigating functions\r\nfunction funcLoginScreen({ navigation }) {\r\n  return (\r\n    <LoginScreen navigation={navigation}/>\r\n  );\r\n}\r\n\r\nfunction funcSignupScreen({ navigation }) {\r\n  return (\r\n    <SignUpScreen navigation={navigation}/>\r\n  );\r\n}\r\n\r\nfunction funcBottomNav({navigation}) {\r\n  return(\r\n    <MyTabs navigation={navigation}/>\r\n  );\r\n}\r\n\r\nconst AuthStack = createNativeStackNavigator();\r\n\r\n\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { DrawerContent } from './screens/global/Drawer';\r\nconst Drawer = createDrawerNavigator();\r\nfunction SideBar(){\r\n  return(\r\n      // <NavigationContainer independent={true}>\r\n      <Drawer.Navigator\r\n        screenOptions={{\r\n          headerShown: false,\r\n          // headerTransparent:true,\r\n          drawerActiveTintColor: 'white',\r\n          drawerStyle: {\r\n            backgroundColor: '#1D4123',\r\n            width: 280,\r\n            paddingEnd: 16\r\n          },\r\n        }}\r\n        drawerContent={props => <DrawerContent {...props}/>}\r\n      >\r\n        <Drawer.Screen name=\"Post\" component={funcBottomNav}/>\r\n        <Drawer.Screen name=\"Login\" component={funcLoginScreen} />\r\n      </Drawer.Navigator>\r\n    // </NavigationContainer>s\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n\r\n  if (fontsLoaded) {\r\n    return (\r\n      <NavigationContainer independent={true}>\r\n        <AuthStack.Navigator \r\n          initialRouteName={firebase.auth().onAuthStateChanged((user) => {return user}) ? \"Login\" : \"SignUpScreen\"}  \r\n          screenOptions={{headerShown: false}}\r\n        >\r\n          <AuthStack.Screen name=\"Login\" component={funcLoginScreen}/>\r\n          <AuthStack.Screen name=\"SignUpScreen\" component={funcSignupScreen}/>\r\n          <AuthStack.Screen name=\"MyTabs\" component={SideBar}/>\r\n          {/* <AuthStack.Screen name=\"MyTabs\" component={funcBottomNav} /> */}\r\n        </AuthStack.Navigator>\r\n      </NavigationContainer>\r\n    );\r\n  } else {\r\n    getFonts();\r\n    setFontsLoaded(true);\r\n    console.log(\"Font is good\");\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}
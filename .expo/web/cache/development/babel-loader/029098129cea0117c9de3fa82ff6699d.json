{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\xx\\\\Desktop\\\\Phytoflex\\\\components\\\\Button\\\\PFPrimaryButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button as XButton } from 'react-native-paper';\nimport Colors from \"../../utils/globalColors\";\nexport var PFPrimaryButton = function PFPrimaryButton(_ref) {\n  var _ref$onPress = _ref.onPress,\n      _onPress = _ref$onPress === void 0 ? function () {} : _ref$onPress,\n      title = _ref.title,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? false : _ref$loading,\n      style = _ref.style,\n      labelStyle = _ref.labelStyle,\n      _ref$roundness = _ref.roundness,\n      roundness = _ref$roundness === void 0 ? 20 : _ref$roundness,\n      bordered = _ref.bordered,\n      icon = _ref.icon;\n\n  var disabledBtnStyle = disabled ? {\n    backgroundColor: Colors.black\n  } : {\n    backgroundColor: Colors.primary\n  };\n  var borderBtnStyle = bordered ? {\n    borderWidth: 2,\n    borderColor: 'white'\n  } : {};\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, React.createElement(XButton, {\n    icon: icon,\n    mode: \"contained\",\n    onPress: function onPress() {\n      return _onPress();\n    },\n    style: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, borderBtnStyle), disabledBtnStyle), styles.btn), style),\n    labelStyle: _objectSpread({\n      fontFamily: 'poppins-regular',\n      color: Colors.white\n    }, labelStyle),\n    uppercase: false,\n    disabled: disabled,\n    loading: loading,\n    theme: {\n      roundness: roundness\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, title));\n};\nvar styles = StyleSheet.create({\n  btn: {\n    elevation: 7\n  }\n});","map":{"version":3,"sources":["C:/Users/xx/Desktop/Phytoflex/components/Button/PFPrimaryButton.js"],"names":["React","Button","XButton","Colors","PFPrimaryButton","onPress","title","disabled","loading","style","labelStyle","roundness","bordered","icon","disabledBtnStyle","backgroundColor","black","primary","borderBtnStyle","borderWidth","borderColor","styles","btn","fontFamily","color","white","StyleSheet","create","elevation"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,MAAM,IAAIC,OAAnB,QAAkC,oBAAlC;AACA,OAAOC,MAAP;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAuH;AAAA,0BAArHC,OAAqH;AAAA,MAArHA,QAAqH,6BAA3G,YAAM,CAAE,CAAmG;AAAA,MAAjGC,KAAiG,QAAjGA,KAAiG;AAAA,2BAA1FC,QAA0F;AAAA,MAA1FA,QAA0F,8BAA/E,KAA+E;AAAA,0BAAxEC,OAAwE;AAAA,MAAxEA,OAAwE,6BAA9D,KAA8D;AAAA,MAAvDC,KAAuD,QAAvDA,KAAuD;AAAA,MAAhDC,UAAgD,QAAhDA,UAAgD;AAAA,4BAApCC,SAAoC;AAAA,MAApCA,SAAoC,+BAAxB,EAAwB;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;AAAA,MAAVC,IAAU,QAAVA,IAAU;;AAElJ,MAAIC,gBAAgB,GAAGP,QAAQ,GAAG;AAAEQ,IAAAA,eAAe,EAAEZ,MAAM,CAACa;AAA1B,GAAH,GAAuC;AAAED,IAAAA,eAAe,EAAEZ,MAAM,CAACc;AAA1B,GAAtE;AACA,MAAIC,cAAc,GAAGN,QAAQ,GAAG;AAACO,IAAAA,WAAW,EAAE,CAAd;AAAiBC,IAAAA,WAAW,EAAE;AAA9B,GAAH,GAA4C,EAAzE;AAEA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AACI,IAAA,IAAI,EAAEP,IADV;AAEI,IAAA,IAAI,EAAC,WAFT;AAGI,IAAA,OAAO,EAAE;AAAA,aAAMR,QAAO,EAAb;AAAA,KAHb;AAII,IAAA,KAAK,8DAAOa,cAAP,GAA0BJ,gBAA1B,GAA+CO,MAAM,CAACC,GAAtD,GAA8Db,KAA9D,CAJT;AAKI,IAAA,UAAU;AAAIc,MAAAA,UAAU,EAAE,iBAAhB;AAAmCC,MAAAA,KAAK,EAAErB,MAAM,CAACsB;AAAjD,OAA2Df,UAA3D,CALd;AAMI,IAAA,SAAS,EAAE,KANf;AAOI,IAAA,QAAQ,EAAEH,QAPd;AAQI,IAAA,OAAO,EAAEC,OARb;AASI,IAAA,KAAK,EAAE;AAACG,MAAAA,SAAS,EAAEA;AAAZ,KATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWKL,KAXL,CADJ,CADJ;AAiBH,CAtBM;AAwBP,IAAMe,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,GAAG,EAAC;AACAM,IAAAA,SAAS,EAAE;AADX;AADyB,CAAlB,CAAf","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport { Button as XButton } from 'react-native-paper'\r\nimport Colors from '../../utils/globalColors'\r\n\r\nexport const PFPrimaryButton = ({onPress = () => {}, title, disabled = false, loading = false, style, labelStyle, roundness = 20, bordered, icon}) => {\r\n\r\n    let disabledBtnStyle = disabled ? { backgroundColor: Colors.black } : { backgroundColor: Colors.primary }\r\n    let borderBtnStyle = bordered ? {borderWidth: 2, borderColor: 'white'} : {}\r\n\r\n    return (\r\n        <View>\r\n            <XButton\r\n                icon={icon}\r\n                mode='contained'\r\n                onPress={() => onPress()}\r\n                style={{ ...borderBtnStyle, ...disabledBtnStyle, ...styles.btn, ...style }}\r\n                labelStyle={{ fontFamily: 'poppins-regular', color: Colors.white, ...labelStyle }}\r\n                uppercase={false}\r\n                disabled={disabled}\r\n                loading={loading}\r\n                theme={{roundness: roundness}}\r\n            >\r\n                {title}\r\n            </XButton>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    btn:{\r\n        elevation: 7,\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\xx\\\\Desktop\\\\Phytoflex\\\\components\\\\PFText.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport XText from \"react-native-web/dist/exports/Text\";\nimport Colors from \"../utils/globalColors\";\nexport var PFText = function PFText(_ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      _ref$weight = _ref.weight,\n      weight = _ref$weight === void 0 ? 'light' : _ref$weight,\n      color = _ref.color,\n      center = _ref.center,\n      size = _ref.size,\n      numberOfLines = _ref.numberOfLines,\n      adjustsFontSizeToFit = _ref.adjustsFontSizeToFit;\n  var fontStyle = '';\n  var fontColor = color ? {\n    color: color\n  } : {\n    color: Colors.primary\n  };\n  var fontSize = size ? {\n    fontSize: size\n  } : {};\n  var fontCenter = center ? {\n    textAlign: 'center'\n  } : {};\n\n  switch (weight) {\n    case 'semi-bold':\n      fontStyle = 'poppins-semiBold';\n      break;\n\n    case 'italic':\n      fontStyle = 'poppins-italic';\n      break;\n\n    case 'light':\n      fontStyle = 'poppins-light';\n      break;\n\n    case 'medium':\n      fontStyle = 'poppins-regular';\n      break;\n\n    default:\n      fontStyle = 'poppins-light';\n  }\n\n  return React.createElement(XText, {\n    style: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, style), {}, {\n      fontFamily: fontStyle\n    }, fontColor), fontSize), fontCenter),\n    numberOfLines: numberOfLines,\n    adjustsFontSizeToFit: adjustsFontSizeToFit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/xx/Desktop/Phytoflex/components/PFText.js"],"names":["React","Colors","PFText","children","style","weight","color","center","size","numberOfLines","adjustsFontSizeToFit","fontStyle","fontColor","primary","fontSize","fontCenter","textAlign","fontFamily"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,MAAP;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAkG;AAAA,MAAhGC,QAAgG,QAAhGA,QAAgG;AAAA,MAAtFC,KAAsF,QAAtFA,KAAsF;AAAA,yBAA/EC,MAA+E;AAAA,MAA/EA,MAA+E,4BAAtE,OAAsE;AAAA,MAA7DC,KAA6D,QAA7DA,KAA6D;AAAA,MAAtDC,MAAsD,QAAtDA,MAAsD;AAAA,MAA9CC,IAA8C,QAA9CA,IAA8C;AAAA,MAAxCC,aAAwC,QAAxCA,aAAwC;AAAA,MAA1BC,oBAA0B,QAA1BA,oBAA0B;AACpH,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,SAAS,GAAGN,KAAK,GAAG;AAAEA,IAAAA,KAAK,EAAEA;AAAT,GAAH,GAAsB;AAAEA,IAAAA,KAAK,EAAEL,MAAM,CAACY;AAAhB,GAA3C;AACA,MAAIC,QAAQ,GAAGN,IAAI,GAAG;AAAEM,IAAAA,QAAQ,EAAEN;AAAZ,GAAH,GAAwB,EAA3C;AACA,MAAIO,UAAU,GAAGR,MAAM,GAAG;AAAES,IAAAA,SAAS,EAAE;AAAb,GAAH,GAA6B,EAApD;;AAEA,UAAQX,MAAR;AACI,SAAK,WAAL;AACIM,MAAAA,SAAS,GAAG,kBAAZ;AACA;;AACJ,SAAK,QAAL;AACIA,MAAAA,SAAS,GAAG,gBAAZ;AACA;;AACJ,SAAK,OAAL;AACIA,MAAAA,SAAS,GAAG,eAAZ;AACA;;AACJ,SAAK,QAAL;AACIA,MAAAA,SAAS,GAAG,iBAAZ;AACA;;AACJ;AACIA,MAAAA,SAAS,GAAG,eAAZ;AAdR;;AAkBA,SACQ,oBAAC,KAAD;AACI,IAAA,KAAK,8DAAOP,KAAP;AAAca,MAAAA,UAAU,EAAEN;AAA1B,OAAwCC,SAAxC,GAAsDE,QAAtD,GAAmEC,UAAnE,CADT;AAEI,IAAA,aAAa,EAAEN,aAFnB;AAGI,IAAA,oBAAoB,EAAEC,oBAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKP,QALL,CADR;AASH,CAjCM","sourcesContent":["import React from 'react';\r\nimport { Text as XText } from 'react-native';\r\nimport Colors from '../utils/globalColors';\r\n\r\nexport const PFText = ({children, style, weight = 'light', color, center, size, numberOfLines,adjustsFontSizeToFit}) => {\r\n    let fontStyle = ''\r\n    let fontColor = color ? { color: color } : { color: Colors.primary }\r\n    let fontSize = size ? { fontSize: size } : {}\r\n    let fontCenter = center ? { textAlign: 'center' } : {}\r\n\r\n    switch (weight) { \r\n        case 'semi-bold':\r\n            fontStyle = 'poppins-semiBold'\r\n            break;\r\n        case 'italic':\r\n            fontStyle = 'poppins-italic'\r\n            break;\r\n        case 'light':\r\n            fontStyle = 'poppins-light'\r\n            break;\r\n        case 'medium':\r\n            fontStyle = 'poppins-regular'\r\n            break;\r\n        default:\r\n            fontStyle = 'poppins-light'\r\n    }\r\n\r\n\r\n    return (\r\n            <XText \r\n                style={{ ...style, fontFamily: fontStyle, ...fontColor, ...fontSize, ...fontCenter }}\r\n                numberOfLines={numberOfLines}\r\n                adjustsFontSizeToFit={adjustsFontSizeToFit} \r\n            >\r\n                {children}\r\n            </XText> \r\n    )\r\n}\r\n\r\n// export default PFText;\r\n"]},"metadata":{},"sourceType":"module"}
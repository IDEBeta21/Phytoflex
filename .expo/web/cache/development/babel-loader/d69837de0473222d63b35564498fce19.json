{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\xx\\\\Desktop\\\\Phytoflex\\\\screens\\\\plantcare\\\\plantCareHealthCare.js\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { Component, useState } from 'react';\nimport { globalStyles } from \"../global/globalStyles\";\nimport { DrawerContent } from \"../global/Drawer\";\nimport firebase from 'firebase';\nimport { PFModalLogin } from \"../../components\";\nexport default function PlantCareHealtCarePage(_ref) {\n  var navigation = _ref.navigation;\n  var userNotLoggedIn = false;\n  firebase.auth().onAuthStateChanged(function (user) {\n    return user;\n  }) ? userNotLoggedIn = true : userNotLoggedIn = false;\n\n  var _useState = useState(userNotLoggedIn),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setmodalVisible = _useState2[1];\n\n  if (userNotLoggedIn) {\n    return React.createElement(View, {\n      style: globalStyles.textContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, React.createElement(PFModalLogin, {\n      title: \"Empty tab.\",\n      message: \"Login to use Plant Care funtionlity\",\n      visible: modalVisible,\n      modalClose: function modalClose() {\n        return navigation.goBack();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: globalStyles.titleText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"This is the Plant Care Health Care Page\"), React.createElement(Text, {\n      style: globalStyles.paragraphText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, \"Open up plantCareHealthCare.js to start working on your app!\"), React.createElement(Button, {\n      onPress: function onPress() {\n        return navigation.navigate('PlantCareSearch');\n      },\n      title: \"Plant Care Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["C:/Users/xx/Desktop/Phytoflex/screens/plantcare/plantCareHealthCare.js"],"names":["React","Component","useState","globalStyles","DrawerContent","firebase","PFModalLogin","PlantCareHealtCarePage","navigation","userNotLoggedIn","auth","onAuthStateChanged","user","modalVisible","setmodalVisible","textContainer","goBack","titleText","paragraphText","navigate"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT;AAEA,SAASC,aAAT;AAEA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAAQC,YAAR;AAEA,eAAe,SAASC,sBAAT,OAA8C;AAAA,MAAbC,UAAa,QAAbA,UAAa;AAG3D,MAAIC,eAAe,GAAG,KAAtB;AAEAJ,EAAAA,QAAQ,CAACK,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,IAAD,EAAU;AAAC,WAAOA,IAAP;AAAY,GAA1D,IAA8DH,eAAe,GAAG,IAAhF,GAAuFA,eAAe,GAAG,KAAzG;;AAEA,kBAAwCP,QAAQ,CAACO,eAAD,CAAhD;AAAA;AAAA,MAAOI,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAIL,eAAJ,EAAqB;AACnB,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAGN,YAAY,CAACY,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAE,YADT;AAEE,MAAA,OAAO,EAAE,qCAFX;AAGE,MAAA,OAAO,EAAEF,YAHX;AAIE,MAAA,UAAU,EAAE;AAAA,eAAML,UAAU,CAACQ,MAAX,EAAN;AAAA,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAYD,GAbD,MAaK;AACH,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAGb,YAAY,CAACc,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,EAII,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAGd,YAAY,CAACe,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAJJ,EASI,oBAAC,MAAD;AACE,MAAA,OAAO,EACL;AAAA,eAAMV,UAAU,CAACW,QAAX,CAAoB,iBAApB,CAAN;AAAA,OAFJ;AAKE,MAAA,KAAK,EAAC,mBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADF;AAmBD;AACF","sourcesContent":["import { Button, Text, View } from 'react-native';\r\nimport React, { Component, useState } from 'react';\r\nimport { globalStyles } from '../global/globalStyles';\r\n\r\nimport { DrawerContent } from '../global/Drawer';\r\n\r\nimport firebase from 'firebase';\r\nimport {PFModalLogin} from '../../components';\r\n\r\nexport default function PlantCareHealtCarePage({navigation}) {\r\n  // Calling Plantcare search screen\r\n\r\n  let userNotLoggedIn = false;\r\n\r\n  firebase.auth().onAuthStateChanged((user) => {return user}) ? userNotLoggedIn = true : userNotLoggedIn = false\r\n\r\n  const [modalVisible, setmodalVisible] = useState(userNotLoggedIn);\r\n\r\n  if (userNotLoggedIn) {\r\n    return (\r\n      <View style={ globalStyles.textContainer }>\r\n        \r\n      \r\n        <PFModalLogin \r\n          title={\"Empty tab.\"} \r\n          message={\"Login to use Plant Care funtionlity\"} \r\n          visible={modalVisible} \r\n          modalClose={() => navigation.goBack()}  \r\n        />\r\n      </View>\r\n    );\r\n  }else{\r\n    return(\r\n      <View>\r\n        <Text style={ globalStyles.titleText }>\r\n            This is the Plant Care Health Care Page\r\n          </Text>\r\n          <Text style={ globalStyles.paragraphText }>\r\n            Open up plantCareHealthCare.js to start working on your app!\r\n          </Text>\r\n\r\n          {/* <Button onPress={() => toPlantCareSearch()} title=\"Plant Care Search\"></Button> */}\r\n          <Button \r\n            onPress={\r\n              () => navigation.navigate('PlantCareSearch')\r\n              // () => this.props.navigation.dispatch(navigation.openDrawer())\r\n            } \r\n            title=\"Plant Care Search\"></Button>\r\n      </View>\r\n    )\r\n    \r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\xx\\\\Desktop\\\\Phytoflex\\\\components\\\\FlatList\\\\Item\\\\AccountListItem.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { PFText } from \"../../PFText\";\nimport Colors from \"../../../utils/globalColors\";\n\nvar LeftContent = function LeftContent(props) {\n  return React.createElement(Avatar.Icon, _extends({}, props, {\n    icon: \"folder\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 30\n    }\n  }));\n};\n\nexport var AccountListItem = function AccountListItem(_ref, style, cardContentStyle) {\n  var imageURL = _ref.imageURL,\n      accountName = _ref.accountName,\n      _ref$onPress = _ref.onPress,\n      _onPress = _ref$onPress === void 0 ? function () {} : _ref$onPress;\n\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return _onPress();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.cardContainer), style),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 30,\n      height: 30,\n      borderRadius: 15\n    },\n    source: {\n      uri: imageURL\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: _objectSpread({}, styles.nameContainer),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, React.createElement(PFText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, accountName))));\n};\nvar styles = StyleSheet.create({\n  cardContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    paddingHorizontal: 10,\n    paddingBottom: 3\n  },\n  nameContainer: {\n    justifyContent: 'center',\n    paddingLeft: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/xx/Desktop/Phytoflex/components/FlatList/Item/AccountListItem.js"],"names":["React","Avatar","Button","Card","Title","Paragraph","PFText","Colors","LeftContent","props","AccountListItem","style","cardContentStyle","imageURL","accountName","onPress","styles","cardContainer","width","height","borderRadius","uri","nameContainer","StyleSheet","create","flex","flexDirection","paddingHorizontal","paddingBottom","justifyContent","paddingLeft"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,SAAtC,QAAuD,oBAAvD;;;AAEA,SAASC,MAAT;AAEA,OAAOC,MAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SAAI,oBAAC,MAAD,CAAQ,IAAR,eAAiBA,KAAjB;AAAwB,IAAA,IAAI,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;AAAA,CAAzB;;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAI3BC,KAJ2B,EAK3BC,gBAL2B;AAAA,MAC3BC,QAD2B,QAC3BA,QAD2B;AAAA,MAE3BC,WAF2B,QAE3BA,WAF2B;AAAA,0BAG3BC,OAH2B;AAAA,MAG3BA,QAH2B,6BAGjB,YAAM,CAAE,CAHS;;AAAA,SAO7B,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMA,QAAO,EAAb;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAMC,MAAM,CAACC,aAAb,GAA+BN,KAA/B,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACO,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE,EAApB;AAAwBC,MAAAA,YAAY,EAAE;AAAtC,KAAd;AAAyD,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAER;AAAP,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,oBAAMG,MAAM,CAACM,aAAb,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUR,WAAV,CADF,CAFF,CADF,CAP6B;AAAA,CAAxB;AAkBP,IAAME,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,aAAa,EAAE;AAGbQ,IAAAA,IAAI,EAAE,CAHO;AAIbC,IAAAA,aAAa,EAAE,KAJF;AAKbC,IAAAA,iBAAiB,EAAE,EALN;AAMbC,IAAAA,aAAa,EAAE;AANF,GADgB;AAS/BN,EAAAA,aAAa,EAAE;AACbO,IAAAA,cAAc,EAAE,QADH;AAEbC,IAAAA,WAAW,EAAE;AAFA;AATgB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\r\nimport { Dimensions, Image, TouchableOpacity } from 'react-native';\r\nimport { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { PFText } from '../../PFText';\r\n// import Colors from '../../utils/globalColors';\r\nimport Colors from '../../../utils/globalColors';\r\n\r\nconst LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\r\n\r\nexport const AccountListItem = ({\r\n    imageURL, \r\n    accountName,\r\n    onPress = () => {}}, \r\n    style, \r\n    cardContentStyle, \r\n  ) => (\r\n  <TouchableOpacity onPress={() => onPress()}>\r\n    <View style={{...styles.cardContainer, ...style}}>\r\n      <Image style={{width: 30, height: 30, borderRadius: 15}} source={{ uri: imageURL}}/>\r\n      <View style={{...styles.nameContainer}}>\r\n        <PFText >{accountName}</PFText>\r\n      </View>\r\n    </View>\r\n  </TouchableOpacity>\r\n  \r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  cardContainer: {\r\n    // marginLeft: 8, \r\n    // width: (Dimensions.get('window').width/2) * 0.93\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    paddingHorizontal: 10,\r\n    paddingBottom: 3\r\n  },\r\n  nameContainer: {\r\n    justifyContent: 'center',\r\n    paddingLeft: 5,\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}
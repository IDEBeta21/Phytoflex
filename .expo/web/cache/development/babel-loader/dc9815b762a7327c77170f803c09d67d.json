{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\xx\\\\Desktop\\\\Phytoflex\\\\App.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { createStackNavigator, Header } from 'react-navigation-stack';\nimport { createAppContainer } from 'react-navigation';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC9WVlZosV9ygptBGcvY9H6MxbuI2EaGx8\",\n  authDomain: \"phytoflex-3f53f.firebaseapp.com\",\n  projectId: \"phytoflex-3f53f\",\n  storageBucket: \"phytoflex-3f53f.appspot.com\",\n  messagingSenderId: \"437461344883\",\n  appId: \"1:437461344883:web:5388696aaa0445c758c006\"\n};\n\nif (firebase.apps.length == 0) {\n  var firebaseApp = firebase.initializeApp(firebaseConfig);\n}\n\nimport LoginScreen from \"./screens/landing/login\";\nimport SignUpScreen from \"./screens/landing/signup\";\nimport MyTabs from \"./screens/global/bottomNav\";\nimport ComponentsSample from \"./screens/global/ComponentsSample\";\nimport FirebaseSample from \"./screens/global/FirebaseSample\";\nimport OnboardingScreen from \"./screens/landing/OnboardingScreen\";\nimport ActivityLogScreen from \"./screens/DrawerContents/ActivityLogs\";\nimport UserProfileScreen from \"./screens/DrawerContents/UserProfileScreen\";\nimport EditProfileScreen from \"./screens/DrawerContents/EditProfile\";\nimport PostsScreen from \"./screens/DrawerContents/Posts\";\nimport ThreadsScreen from \"./screens/DrawerContents/Threads\";\nimport TrackHistoryScreen from \"./screens/DrawerContents/TrackHistory\";\nimport SettingsScreen from \"./screens/DrawerContents/Settings\";\nimport RateUsScreen from \"./screens/DrawerContents/RateUs\";\nimport UpgradeScreen from \"./screens/DrawerContents/PremiumOption\";\nimport DrawerHeader from \"./screens/DrawerContents/DrawerHeader\";\nimport ForumScreen from \"./screens/forum\";\nimport PlantCare from \"./screens/plantcare/mainPlantCare\";\nimport HeaderContent from \"./screens/global/Header\";\nimport AppLoading from 'expo-app-loading';\nimport { useFonts } from 'expo-font';\n\nfunction FuncActivityLog(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(ActivityLogScreen, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction FuncUserProfile(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(UserProfileScreen, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction FuncEditProfile(_ref3) {\n  var navigation = _ref3.navigation;\n  return React.createElement(EditProfileScreen, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction FuncPost(_ref4) {\n  var navigation = _ref4.navigation;\n  return React.createElement(PostsScreen, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction FunctionThread(_ref5) {\n  var navigation = _ref5.navigation;\n  return React.createElement(ThreadsScreen, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction FuncTrackHistory(_ref6) {\n  var navigation = _ref6.navigation;\n  return React.createElement(TrackHistoryScreen, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction FuncSettings(_ref7) {\n  var navigation = _ref7.navigation;\n  return React.createElement(SettingsScreen, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction FuncRateUs(_ref8) {\n  var navigation = _ref8.navigation;\n  return React.createElement(RateUsScreen, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction FuncUpgrade(_ref9) {\n  var navigation = _ref9.navigation;\n  return React.createElement(UpgradeScreen, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction FuncLoginScreen(_ref10) {\n  var navigation = _ref10.navigation;\n  return React.createElement(LoginScreen, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction FuncSignupScreen(_ref11) {\n  var navigation = _ref11.navigation;\n  return React.createElement(SignUpScreen, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction FuncBottomNav(_ref12) {\n  var navigation = _ref12.navigation;\n  return React.createElement(MyTabs, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction FuncOnboardingScreen(_ref13) {\n  var navigation = _ref13.navigation;\n  return React.createElement(OnboardingScreen, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction FuncComponentSample(_ref14) {\n  var navigation = _ref14.navigation;\n  return React.createElement(ComponentsSample, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction FuncFirebaseSample(_ref15) {\n  var navigation = _ref15.navigation;\n  return React.createElement(FirebaseSample, {\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  });\n}\n\nvar AuthStack = createNativeStackNavigator();\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { DrawerContent } from \"./screens/global/Drawer\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nvar Drawer = createDrawerNavigator();\n\nfunction SideBar(_ref16) {\n  var _this = this;\n\n  var navigation = _ref16.navigation;\n  return React.createElement(Drawer.Navigator, {\n    screenOptions: {\n      drawerActiveTintColor: 'white',\n      drawerStyle: {\n        backgroundColor: '#1D4123',\n        width: 300\n      },\n      gestureEnabled: false\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerContent, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 33\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Post\",\n    options: {\n      headerShown: false\n    },\n    component: FuncBottomNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Login\",\n    option: {\n      headerShown: false\n    },\n    component: FuncLoginScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"DrawerUserProfile\",\n    component: FuncUserProfile,\n    options: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(DrawerHeader, {\n          screenDescription: 'UserProfileSc',\n          title: 'My Profile',\n          navigation: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 37\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#1D4123'\n      },\n      headerTintColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"DrawerActivityLogs\",\n    component: FuncActivityLog,\n    options: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(DrawerHeader, {\n          screenDescription: 'ActivityLogScreen',\n          title: 'Activity Log',\n          navigation: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 37\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#1D4123'\n      },\n      headerTintColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"DrawerPostScreen\",\n    component: FuncPost,\n    options: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(DrawerHeader, {\n          screenDescription: 'PostsScreen',\n          title: 'My Posts',\n          navigation: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 37\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#1D4123'\n      },\n      headerTintColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"DrawerThread\",\n    component: FunctionThread,\n    options: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(DrawerHeader, {\n          screenDescription: 'ThreadsScreen',\n          title: 'My Threads',\n          navigation: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 37\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#1D4123'\n      },\n      headerTintColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"DrawerTrackHistory\",\n    component: FuncTrackHistory,\n    options: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(DrawerHeader, {\n          screenDescription: 'TrackHistoryScreen',\n          title: 'Track History',\n          navigation: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 37\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#1D4123'\n      },\n      headerTintColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"DrawerSettings\",\n    component: FuncSettings,\n    options: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(DrawerHeader, {\n          screenDescription: 'SettingsScreen',\n          title: 'Settings',\n          navigation: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 37\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#1D4123'\n      },\n      headerTintColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"DrawerRateUs\",\n    component: FuncRateUs,\n    options: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(DrawerHeader, {\n          screenDescription: 'RateUsScreen',\n          title: 'Rate Us',\n          navigation: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 37\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#1D4123'\n      },\n      headerTintColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"DrawerUpgradeScreen\",\n    component: FuncUpgrade,\n    options: {\n      headerTitle: function headerTitle(props) {\n        return React.createElement(DrawerHeader, {\n          screenDescription: 'UpgradeScreen',\n          title: 'Upgrade',\n          navigation: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 37\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: '#1D4123'\n      },\n      headerTintColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction App() {\n  var _useFonts = useFonts({\n    'poppins-regular': require(\"./assets/fonts/Poppins-Regular.ttf\"),\n    'poppins-semiBold': require(\"./assets/fonts/Poppins-SemiBold.ttf\"),\n    'poppins-light': require(\"./assets/fonts/Poppins-Light.ttf\"),\n    'poppins-italic': require(\"./assets/fonts/Poppins-Italic.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (fontsLoaded) {\n    return React.createElement(NavigationContainer, {\n      independent: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 7\n      }\n    }, React.createElement(AuthStack.Navigator, {\n      initialRouteName: firebase.auth().onAuthStateChanged(function (user) {\n        return user;\n      }) ? \"Login\" : \"SignUpScreen\",\n      screenOptions: {\n        headerShown: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }\n    }, React.createElement(AuthStack.Screen, {\n      name: \"Login\",\n      component: FuncLoginScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 10\n      }\n    }), React.createElement(AuthStack.Screen, {\n      name: \"SignUpScreen\",\n      component: FuncSignupScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }\n    }), React.createElement(AuthStack.Screen, {\n      name: \"MyTabs\",\n      component: SideBar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }\n    }), React.createElement(AuthStack.Screen, {\n      name: \"ComponentsSample\",\n      component: FuncComponentSample,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }\n    }), React.createElement(AuthStack.Screen, {\n      name: \"FirebaseSample\",\n      component: FuncFirebaseSample,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    });\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/xx/Desktop/Phytoflex/App.js"],"names":["React","useState","useEffect","createStackNavigator","Header","createAppContainer","NavigationContainer","createNativeStackNavigator","firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","apps","length","firebaseApp","initializeApp","LoginScreen","SignUpScreen","MyTabs","ComponentsSample","FirebaseSample","OnboardingScreen","ActivityLogScreen","UserProfileScreen","EditProfileScreen","PostsScreen","ThreadsScreen","TrackHistoryScreen","SettingsScreen","RateUsScreen","UpgradeScreen","DrawerHeader","ForumScreen","PlantCare","HeaderContent","AppLoading","useFonts","FuncActivityLog","navigation","FuncUserProfile","FuncEditProfile","FuncPost","FunctionThread","FuncTrackHistory","FuncSettings","FuncRateUs","FuncUpgrade","FuncLoginScreen","FuncSignupScreen","FuncBottomNav","FuncOnboardingScreen","FuncComponentSample","FuncFirebaseSample","AuthStack","createDrawerNavigator","DrawerContent","AsyncStorage","Drawer","SideBar","drawerActiveTintColor","drawerStyle","backgroundColor","width","gestureEnabled","props","headerShown","headerTitle","headerStyle","headerTintColor","App","require","fontsLoaded","auth","onAuthStateChanged","user"],"mappings":"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","sourcesContent":["// import * as React from 'react';\r\nimport React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Import stack navigator\r\nimport { createStackNavigator, Header } from 'react-navigation-stack';\r\nimport { createAppContainer } from 'react-navigation';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\n// Import firebase\r\nimport firebase from 'firebase';\r\n\r\n// firebase config\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC9WVlZosV9ygptBGcvY9H6MxbuI2EaGx8\",\r\n    authDomain: \"phytoflex-3f53f.firebaseapp.com\",\r\n    projectId: \"phytoflex-3f53f\",\r\n    storageBucket: \"phytoflex-3f53f.appspot.com\",\r\n    messagingSenderId: \"437461344883\",\r\n    appId: \"1:437461344883:web:5388696aaa0445c758c006\"\r\n};\r\nif (firebase.apps.length == 0) {\r\n    const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\n// import Screens\r\nimport LoginScreen from './screens/landing/login';\r\nimport SignUpScreen from './screens/landing/signup';\r\nimport MyTabs from './screens/global/bottomNav';\r\nimport ComponentsSample from './screens/global/ComponentsSample';\r\nimport FirebaseSample from './screens/global/FirebaseSample';\r\nimport OnboardingScreen from './screens/landing/OnboardingScreen';\r\n\r\n// Imports for Drawer navigation\r\nimport ActivityLogScreen from './screens/DrawerContents/ActivityLogs';\r\nimport UserProfileScreen from './screens/DrawerContents/UserProfileScreen';\r\nimport EditProfileScreen from './screens/DrawerContents/EditProfile';\r\nimport PostsScreen from './screens/DrawerContents/Posts';\r\nimport ThreadsScreen from './screens/DrawerContents/Threads';\r\nimport TrackHistoryScreen from './screens/DrawerContents/TrackHistory';\r\nimport SettingsScreen from './screens/DrawerContents/Settings';\r\nimport RateUsScreen from './screens/DrawerContents/RateUs';\r\nimport UpgradeScreen from './screens/DrawerContents/PremiumOption'\r\n\r\nimport DrawerHeader from './screens/DrawerContents/DrawerHeader';\r\n\r\nimport ForumScreen from './screens/forum';\r\nimport PlantCare from './screens/plantcare/mainPlantCare';\r\nimport HeaderContent from './screens/global/Header';\r\n\r\n// \r\n// import { AppLoading } from 'expo';\\\r\n// import { AppLoading } from 'expo';\r\nimport AppLoading from 'expo-app-loading';\r\n// import * as Font from 'expo-font';\r\nimport { useFonts } from 'expo-font';\r\n// import { View } from 'react-native-web';\r\n// import { Text } from 'react-native';\r\n\r\n// Drawer Navigation functions\r\nfunction FuncActivityLog({navigation}){\r\n  return(\r\n    <ActivityLogScreen navigation={navigation}/>\r\n  )\r\n}\r\nfunction FuncUserProfile({navigation}){\r\n  return(\r\n    <UserProfileScreen navigation={navigation}/>\r\n  )\r\n}\r\n\r\nfunction FuncEditProfile({navigation}){\r\n  return(\r\n    <EditProfileScreen navigation={navigation}/>\r\n  )\r\n}\r\n\r\nfunction FuncPost({navigation}){\r\n  return(\r\n    <PostsScreen navigation={navigation}/>\r\n  )\r\n}\r\nfunction FunctionThread({navigation}){\r\n  return(\r\n    <ThreadsScreen navigation={navigation}/>\r\n  )\r\n}\r\nfunction FuncTrackHistory({navigation}){\r\n  return(\r\n    <TrackHistoryScreen navigation={navigation}/>\r\n  )\r\n}\r\nfunction FuncSettings({navigation}){\r\n  return(\r\n    <SettingsScreen navigation={navigation}/>\r\n  )\r\n}\r\nfunction FuncRateUs({navigation}){\r\n  return(\r\n    <RateUsScreen navigation={navigation}/>\r\n  )\r\n}\r\nfunction FuncUpgrade({navigation}){\r\n  return(\r\n    <UpgradeScreen navigation={navigation}/>\r\n  )\r\n}\r\n\r\nfunction FuncLoginScreen({ navigation }) {\r\n  return (\r\n    <LoginScreen navigation={navigation}/>\r\n  );\r\n}\r\n\r\nfunction FuncSignupScreen({ navigation }) {\r\n  return (\r\n    <SignUpScreen navigation={navigation}/>\r\n  );\r\n}\r\n\r\nfunction FuncBottomNav({navigation}) {\r\n  return(\r\n    <MyTabs navigation={navigation}/>\r\n  );\r\n}\r\n\r\nfunction FuncOnboardingScreen({navigation}) {\r\n  return(\r\n    <OnboardingScreen navigation={navigation}/>\r\n  );\r\n}\r\n\r\nfunction FuncComponentSample({navigation}){\r\n  return(\r\n    <ComponentsSample navigation={navigation}/>\r\n  )\r\n}\r\n\r\nfunction FuncFirebaseSample({navigation}){\r\n  return(\r\n    <FirebaseSample navigation={navigation}/>\r\n  )\r\n}\r\n\r\nconst AuthStack = createNativeStackNavigator();\r\n\r\n\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { DrawerContent } from './screens/global/Drawer';\r\nimport { AsyncStorage } from 'react-native';\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nfunction SideBar({navigation}){\r\n  return(\r\n      // <NavigationContainer independent={true}>\r\n      <Drawer.Navigator\r\n        screenOptions={{\r\n          // headerShown: false,\r\n          // headerTransparent:true,\r\n          drawerActiveTintColor: 'white',\r\n          drawerStyle: {\r\n            backgroundColor: '#1D4123',\r\n            width: 300,\r\n          },\r\n          gestureEnabled: false\r\n        }}\r\n        drawerContent={props => <DrawerContent {...props}/>}\r\n      >\r\n        <Drawer.Screen name=\"Post\" options={{headerShown: false}} component={FuncBottomNav}/>\r\n        {/* <Drawer.Screen name=\"UserProfile\" component={FuncMainDrawer}/> */}\r\n        {/* <Drawer.Screen name=\"ActivityLogs\" component={FuncActivityLog} /> */}\r\n        <Drawer.Screen name=\"Login\" option={{headerShown: false}} component={FuncLoginScreen} />\r\n\r\n        {/* For Drawer Navigation */}\r\n        \r\n        <Drawer.Screen \r\n          name=\"DrawerUserProfile\"\r\n          component={FuncUserProfile}\r\n          options={{ \r\n            headerTitle: (props) => <DrawerHeader screenDescription={'UserProfileSc'} title={'My Profile'} navigation={navigation} />, \r\n            headerStyle: {\r\n              backgroundColor: '#1D4123'\r\n            },\r\n            headerTintColor: 'white'\r\n          }} />\r\n\r\n        <Drawer.Screen \r\n          name=\"DrawerActivityLogs\"\r\n          component={FuncActivityLog}\r\n          options={{ \r\n            headerTitle: (props) => <DrawerHeader screenDescription={'ActivityLogScreen'} title={'Activity Log'} navigation={navigation} />, \r\n            headerStyle: {\r\n              backgroundColor: '#1D4123'\r\n            },\r\n            headerTintColor: 'white'\r\n          }} />\r\n          \r\n        <Drawer.Screen \r\n          name=\"DrawerPostScreen\"\r\n          component={FuncPost}\r\n          options={{ \r\n            headerTitle: (props) => <DrawerHeader screenDescription={'PostsScreen'} title={'My Posts'} navigation={navigation} />, \r\n            headerStyle: {\r\n              backgroundColor: '#1D4123'\r\n            },\r\n            headerTintColor: 'white'\r\n          }} />\r\n          \r\n        <Drawer.Screen \r\n          name=\"DrawerThread\"\r\n          component={FunctionThread}\r\n          options={{ \r\n            headerTitle: (props) => <DrawerHeader screenDescription={'ThreadsScreen'} title={'My Threads'} navigation={navigation} />, \r\n            headerStyle: {\r\n              backgroundColor: '#1D4123'\r\n            },\r\n            headerTintColor: 'white'\r\n          }} />\r\n          \r\n        <Drawer.Screen \r\n          name=\"DrawerTrackHistory\"\r\n          component={FuncTrackHistory}\r\n          options={{ \r\n            headerTitle: (props) => <DrawerHeader screenDescription={'TrackHistoryScreen'} title={'Track History'} navigation={navigation} />, \r\n            headerStyle: {\r\n              backgroundColor: '#1D4123'\r\n            },\r\n            headerTintColor: 'white'\r\n          }} />\r\n\r\n          <Drawer.Screen \r\n          name=\"DrawerSettings\"\r\n          component={FuncSettings}\r\n          options={{ \r\n            headerTitle: (props) => <DrawerHeader screenDescription={'SettingsScreen'} title={'Settings'} navigation={navigation} />, \r\n            headerStyle: {\r\n              backgroundColor: '#1D4123'\r\n            },\r\n            headerTintColor: 'white'\r\n          }} />\r\n\r\n        <Drawer.Screen \r\n          name=\"DrawerRateUs\"\r\n          component={FuncRateUs}\r\n          options={{ \r\n            headerTitle: (props) => <DrawerHeader screenDescription={'RateUsScreen'} title={'Rate Us'} navigation={navigation} />, \r\n            headerStyle: {\r\n              backgroundColor: '#1D4123'\r\n            },\r\n            headerTintColor: 'white'\r\n          }} />\r\n        \r\n        <Drawer.Screen \r\n          name=\"DrawerUpgradeScreen\"\r\n          component={FuncUpgrade}\r\n          options={{ \r\n            headerTitle: (props) => <DrawerHeader screenDescription={'UpgradeScreen'} title={'Upgrade'} navigation={navigation} />, \r\n            headerStyle: {\r\n              backgroundColor: '#1D4123'\r\n            },\r\n            headerTintColor: 'white'\r\n          }} />\r\n        \r\n      </Drawer.Navigator>\r\n    // </NavigationContainer>s\r\n  );\r\n}\r\nfunction App() {\r\n\r\n  let [ fontsLoaded ] = useFonts({\r\n    'poppins-regular': require('./assets/fonts/Poppins-Regular.ttf'),\r\n    'poppins-semiBold': require('./assets/fonts/Poppins-SemiBold.ttf'),\r\n    'poppins-light': require('./assets/fonts/Poppins-Light.ttf'),\r\n    'poppins-italic': require('./assets/fonts/Poppins-Italic.ttf'),\r\n  })\r\n\r\n  if (fontsLoaded) {\r\n    return (\r\n      \r\n      <NavigationContainer independent={true}>\r\n        <AuthStack.Navigator \r\n          initialRouteName={firebase.auth().onAuthStateChanged((user) => {return user}) ? \"Login\" : \"SignUpScreen\"}  \r\n          screenOptions={{headerShown: false}}\r\n        >\r\n         <AuthStack.Screen name=\"Login\" component={FuncLoginScreen}/>\r\n          <AuthStack.Screen name=\"SignUpScreen\" component={FuncSignupScreen}/>\r\n          <AuthStack.Screen name=\"MyTabs\" component={SideBar}/>\r\n          <AuthStack.Screen name=\"ComponentsSample\" component={FuncComponentSample}/>\r\n          <AuthStack.Screen name=\"FirebaseSample\" component={FuncFirebaseSample}/>\r\n          {/* <AuthStack.Screen name=\"MyTabs\" component={funcBottomNav} /> */}\r\n        </AuthStack.Navigator>\r\n      </NavigationContainer>\r\n    );\r\n  } else {\r\n    // getFonts();\r\n    // setFontsLoaded(true);\r\n    // console.log(\"Font is good\");\r\n    return (<AppLoading/>);\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}
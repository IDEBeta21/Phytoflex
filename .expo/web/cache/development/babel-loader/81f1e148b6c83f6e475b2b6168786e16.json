{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\xx\\\\Desktop\\\\Phytoflex\\\\components\\\\FlatList\\\\Item\\\\PlantListItem.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { PFText } from \"../../PFText\";\nimport Colors from \"../../../utils/globalColors\";\nexport var PlantListItem = function PlantListItem(_ref) {\n  var CardList = _ref.CardList,\n      imageURL = _ref.imageURL,\n      itemName = _ref.itemName,\n      category = _ref.category,\n      price = _ref.price,\n      quantity = _ref.quantity,\n      _ref$onPress = _ref.onPress,\n      _onPress = _ref$onPress === void 0 ? function () {} : _ref$onPress,\n      style = _ref.style,\n      sold = _ref.sold;\n\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return _onPress();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, CardList ? React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.cardContainer), style),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: imageURL\n    },\n    style: {\n      height: 140,\n      width: Dimensions.get('window').width / 2 * 0.90,\n      margin: 4,\n      borderRadius: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: _objectSpread({}, styles.cardContent),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(PFText, {\n    weight: \"medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, itemName), React.createElement(PFText, {\n    weight: \"medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, category), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(PFText, {\n    color: Colors.secondary,\n    weight: \"semi-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"P \", price)), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, React.createElement(PFText, {\n    color: Colors.primary,\n    weight: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"sold \", sold))))) : React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.itemContainer), style),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: _objectSpread({}, styles.imageContainer),\n    source: {\n      uri: imageURL\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: _objectSpread({}, styles.textContainer),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(PFText, {\n    weight: \"semi-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, itemName), React.createElement(PFText, {\n    weight: \"semi-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, category), React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, React.createElement(PFText, {\n    color: Colors.secondary,\n    weight: \"semi-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"P \", price)), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, React.createElement(PFText, {\n    color: Colors.primary,\n    weight: \"semi-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"x \", quantity))))));\n};\nexport var SearchPlant = function SearchPlant(_ref2) {\n  var searchedItem = _ref2.searchedItem,\n      _ref2$onPress = _ref2.onPress,\n      _onPress2 = _ref2$onPress === void 0 ? function () {} : _ref2$onPress;\n\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return _onPress2();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: _objectSpread({}, styles.searchPlant),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 6\n    }\n  }, React.createElement(PFText, {\n    weight: \"semi-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }\n  }, searchedItem), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  }, React.createElement(PFText, {\n    color: Colors.primary,\n    weight: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, \"Remove\"))));\n};\nexport var PlantCategory = function PlantCategory(_ref3) {\n  var imageURL = _ref3.imageURL,\n      categoryName = _ref3.categoryName,\n      _ref3$onPress = _ref3.onPress,\n      _onPress3 = _ref3$onPress === void 0 ? function () {} : _ref3$onPress;\n\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return _onPress3();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: _objectSpread({}, styles.categoryContainer),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: imageURL\n    },\n    style: {\n      height: 60,\n      width: Dimensions.get('window').width / 4 * 0.70,\n      margin: 4,\n      borderRadius: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: _objectSpread({}, styles.cardContent),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, React.createElement(PFText, {\n    weight: \"semi-bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, categoryName))));\n};\nvar styles = StyleSheet.create({\n  itemContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    paddingLeft: 10,\n    marginVertical: 7\n  },\n  imageContainer: {\n    width: 60,\n    height: 60,\n    borderRadius: 10\n  },\n  textContainer: {\n    flex: 1,\n    paddingHorizontal: 8\n  },\n  cardContainer: {\n    flex: 1,\n    marginLeft: Dimensions.get('window').width / 2 * 0.03,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: Colors.primary,\n    borderRadius: 12\n  },\n  cardContent: {\n    padding: 12,\n    paddingTop: 10,\n    margin: 0\n  },\n  searchPlant: {\n    flex: 1,\n    paddingHorizontal: 8,\n    borderWidth: 1,\n    borderColor: Colors.primary,\n    borderRadius: 7\n  },\n  categoryContainer: {\n    width: Dimensions.get('window').width / 4 * 0.90,\n    alignItems: 'center',\n    borderColor: Colors.primary,\n    borderRadius: 8,\n    margin: 2\n  }\n});","map":{"version":3,"sources":["C:/Users/xx/Desktop/Phytoflex/components/FlatList/Item/PlantListItem.js"],"names":["React","Avatar","Button","Card","Title","Paragraph","PFText","Colors","PlantListItem","CardList","imageURL","itemName","category","price","quantity","onPress","style","sold","styles","cardContainer","uri","height","width","Dimensions","get","margin","borderRadius","cardContent","flexDirection","flex","secondary","alignItems","primary","itemContainer","imageContainer","textContainer","SearchPlant","searchedItem","searchPlant","PlantCategory","categoryName","categoryContainer","StyleSheet","create","paddingLeft","marginVertical","paddingHorizontal","marginLeft","borderWidth","borderColor","padding","paddingTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Dimensions, Image, TouchableOpacity } from 'react-native';\r\nimport { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { PFText } from '../../PFText';\r\nimport Colors from '../../../utils/globalColors';\r\n\r\nexport const PlantListItem = ({\r\n    CardList,\r\n    imageURL, \r\n    itemName,\r\n    category,\r\n    price,\r\n    quantity,\r\n    onPress = () => {},\r\n    style,\r\n    sold\r\n   \r\n    \r\n  },  \r\n\r\n  \r\n    \r\n) => (\r\n\r\n  <TouchableOpacity onPress={() => onPress()}>\r\n    {\r\n      CardList\r\n      ? \r\n      <View style={{...styles.cardContainer, ...style}}>\r\n        <Image \r\n          source={{ uri: imageURL}}\r\n          style={{\r\n            height: 140,\r\n            width: (Dimensions.get('window').width/2) * 0.90,\r\n            margin: 4,\r\n            borderRadius: 8\r\n          }}\r\n        />\r\n\r\n        <View style={{...styles.cardContent}}>\r\n          <PFText weight='medium'>{itemName}</PFText>  \r\n          <PFText weight='medium'>{category}</PFText>  \r\n          <View style={{flexDirection: 'row', width: '100%'}}>\r\n            <View style={{flex: 1}}>\r\n              <PFText color={Colors.secondary} weight='semi-bold'>P {price}</PFText>\r\n            </View>\r\n            <View style={{flex: 1, alignItems: 'flex-end'}}>\r\n              <PFText color={Colors.primary} weight='light'>sold {sold}</PFText>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      : \r\n      <View style={{...styles.itemContainer, ...style}}>\r\n        <Image style={{...styles.imageContainer}} source={{ uri: imageURL}}/>\r\n        <View style={{...styles.textContainer}}>\r\n            <PFText weight='semi-bold'>{itemName}</PFText>\r\n            <PFText weight='semi-bold'>{category}</PFText>\r\n            <View style={{flex:1, flexDirection: 'row'}}>\r\n              <View style={{flex: 1}}>\r\n                <PFText color={Colors.secondary} weight='semi-bold'>P {price}</PFText>\r\n              </View>\r\n              <View style={{flex: 1, alignItems: 'flex-end'}}>\r\n                <PFText color={Colors.primary} weight='semi-bold'>x {quantity}</PFText>\r\n              </View>\r\n            </View>\r\n        </View>\r\n      </View>\r\n    }\r\n    \r\n  </TouchableOpacity>\r\n    \r\n);\r\n\r\nexport const SearchPlant = ({\r\n    searchedItem,\r\n    onPress = () => {}\r\n},\r\n\r\n) => (\r\n  <TouchableOpacity onPress={() => onPress()}>\r\n    {\r\n     <View style={{...styles.searchPlant}}>\r\n     <PFText weight='semi-bold'>{searchedItem}</PFText> \r\n     \r\n     <View style={{flex: 1, alignItems: 'flex-end'}}>\r\n              <PFText color={Colors.primary} weight='light'>Remove</PFText>\r\n            </View>\r\n        \r\n     </View> \r\n    }\r\n  </TouchableOpacity>\r\n  \r\n  );\r\n  export const PlantCategory = ({\r\n    imageURL,\r\n    categoryName,\r\n    onPress = () => {}\r\n},\r\n\r\n) => (\r\n  <TouchableOpacity onPress={() => onPress()}>\r\n    {\r\n      <View style={{...styles.categoryContainer}}>\r\n      <Image \r\n        source={{ uri: imageURL}}\r\n        style={{\r\n          height: 60,\r\n          width: (Dimensions.get('window').width/4) * 0.70,\r\n          margin: 4,\r\n          borderRadius: 8\r\n        }}\r\n      />\r\n          <View style={{...styles.cardContent}}>\r\n              <PFText weight='semi-bold'>{categoryName}</PFText> \r\n          </View>\r\n    </View>\r\n    }\r\n  </TouchableOpacity>)\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  itemContainer: {\r\n    // marginLeft: 8, \r\n    // width: (Dimensions.get('window').width/2) * 0.93\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    paddingLeft: 10,\r\n    marginVertical: 7\r\n  },\r\n  imageContainer: {\r\n      width: 60, \r\n      height: 60, \r\n      borderRadius: 10\r\n  },\r\n  textContainer: {\r\n    // justifyContent: 'center',\r\n    // paddingVertical: 2,\r\n    // flexDirection: 'row',\r\n    flex: 1,\r\n    paddingHorizontal: 8,\r\n  },\r\n\r\n  cardContainer: {\r\n    flex: 1,\r\n    marginLeft: (Dimensions.get('window').width/2) * 0.03, \r\n    // width: (Dimensions.get('window').width/2) * 0.90,\r\n    alignItems: 'center', \r\n    // justifyContent: 'center',\r\n    borderWidth: 1, \r\n    borderColor: Colors.primary, \r\n    borderRadius: 12,\r\n  },\r\n  cardContent: {\r\n    padding: 12,\r\n    paddingTop: 10,\r\n    margin: 0\r\n  },\r\n  searchPlant:{\r\n    flex: 1,\r\n    paddingHorizontal: 8,\r\n    borderWidth: 1,\r\n    borderColor: Colors.primary, \r\n    borderRadius: 7,\r\n  },\r\n  categoryContainer:{\r\n    width: (Dimensions.get('window').width/4) * 0.90,\r\n    alignItems: 'center',\r\n    //borderWidth: 1, \r\n    borderColor: Colors.primary, \r\n    borderRadius: 8,\r\n    margin: 2,\r\n\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}